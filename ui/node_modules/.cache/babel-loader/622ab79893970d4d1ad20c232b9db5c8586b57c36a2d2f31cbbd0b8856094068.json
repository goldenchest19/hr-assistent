{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/context/MatchingContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { matchingAPI } from '../utils/api';\n\n// Начальное состояние\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  matchHistory: [],\n  recentMatches: [],\n  currentMatch: null,\n  loading: false,\n  error: null\n};\n\n// Типы действий\nconst types = {\n  FETCH_HISTORY_REQUEST: 'FETCH_HISTORY_REQUEST',\n  FETCH_HISTORY_SUCCESS: 'FETCH_HISTORY_SUCCESS',\n  FETCH_HISTORY_FAILURE: 'FETCH_HISTORY_FAILURE',\n  FETCH_RECENT_MATCHES_REQUEST: 'FETCH_RECENT_MATCHES_REQUEST',\n  FETCH_RECENT_MATCHES_SUCCESS: 'FETCH_RECENT_MATCHES_SUCCESS',\n  FETCH_RECENT_MATCHES_FAILURE: 'FETCH_RECENT_MATCHES_FAILURE',\n  SET_CURRENT_MATCH: 'SET_CURRENT_MATCH',\n  CLEAR_CURRENT_MATCH: 'CLEAR_CURRENT_MATCH',\n  PERFORM_MATCH_REQUEST: 'PERFORM_MATCH_REQUEST',\n  PERFORM_MATCH_SUCCESS: 'PERFORM_MATCH_SUCCESS',\n  PERFORM_MATCH_FAILURE: 'PERFORM_MATCH_FAILURE'\n};\n\n// Редюсер для управления состоянием\nconst matchingReducer = (state, action) => {\n  switch (action.type) {\n    case types.FETCH_HISTORY_REQUEST:\n    case types.FETCH_RECENT_MATCHES_REQUEST:\n    case types.PERFORM_MATCH_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.FETCH_HISTORY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        matchHistory: action.payload\n      };\n    case types.FETCH_RECENT_MATCHES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        recentMatches: action.payload\n      };\n    case types.PERFORM_MATCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        currentMatch: action.payload,\n        recentMatches: [action.payload, ...state.recentMatches].slice(0, 5)\n      };\n    case types.SET_CURRENT_MATCH:\n      return {\n        ...state,\n        currentMatch: action.payload\n      };\n    case types.CLEAR_CURRENT_MATCH:\n      return {\n        ...state,\n        currentMatch: null\n      };\n    case types.FETCH_HISTORY_FAILURE:\n    case types.FETCH_RECENT_MATCHES_FAILURE:\n    case types.PERFORM_MATCH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Создание контекста\nconst MatchingContext = /*#__PURE__*/createContext();\n\n// Провайдер контекста\nexport const MatchingProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(matchingReducer, initialState);\n\n  // Загрузка последних сопоставлений при инициализации\n  useEffect(() => {\n    fetchRecentMatches();\n  }, []);\n\n  // Функции для работы с API\n\n  // Получение истории сопоставлений\n  const fetchMatchHistory = useCallback(async params => {\n    dispatch({\n      type: types.FETCH_HISTORY_REQUEST\n    });\n    try {\n      var _response$data;\n      const response = await matchingAPI.getMatchingHistory(params);\n      const data = Array.isArray(response.data) ? response.data : ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];\n      dispatch({\n        type: types.FETCH_HISTORY_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.FETCH_HISTORY_FAILURE,\n        payload: error.message\n      });\n    }\n  }, []);\n\n  // Получение последних сопоставлений\n  const fetchRecentMatches = async () => {\n    dispatch({\n      type: types.FETCH_RECENT_MATCHES_REQUEST\n    });\n    try {\n      const response = await matchingAPI.getMatchingHistory({\n        limit: 5\n      });\n      dispatch({\n        type: types.FETCH_RECENT_MATCHES_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.FETCH_RECENT_MATCHES_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n\n  // Получение сопоставления по ID\n  const fetchMatchById = async id => {\n    dispatch({\n      type: types.PERFORM_MATCH_REQUEST\n    });\n    try {\n      const response = await matchingAPI.getMatchingById(id);\n      dispatch({\n        type: types.PERFORM_MATCH_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PERFORM_MATCH_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n\n  // Выполнение сопоставления резюме и вакансии\n  const performMatching = async (resumeType, resumeData, vacancyType, vacancyData) => {\n    dispatch({\n      type: types.PERFORM_MATCH_REQUEST\n    });\n    try {\n      let response;\n\n      // Определение типа запроса на основе параметров\n      if (resumeType === 'file') {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeFileToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeFileToVacancyText(resumeData, vacancyData);\n        }\n      } else if (resumeType === 'url') {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeUrlToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeUrlToVacancyText(resumeData, vacancyData);\n        }\n      } else {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeTextToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeTextToVacancyText(resumeData, vacancyData);\n        }\n      }\n      dispatch({\n        type: types.PERFORM_MATCH_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: types.PERFORM_MATCH_FAILURE,\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n\n  // Установка текущего сопоставления\n  const setCurrentMatch = match => {\n    dispatch({\n      type: types.SET_CURRENT_MATCH,\n      payload: match\n    });\n  };\n\n  // Очистка текущего сопоставления\n  const clearCurrentMatch = () => {\n    dispatch({\n      type: types.CLEAR_CURRENT_MATCH\n    });\n  };\n\n  // Значения и функции, предоставляемые контекстом\n  const value = {\n    ...state,\n    fetchMatchHistory,\n    fetchRecentMatches,\n    fetchMatchById,\n    performMatching,\n    setCurrentMatch,\n    clearCurrentMatch\n  };\n  return /*#__PURE__*/_jsxDEV(MatchingContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n// Хук для использования контекста\n_s(MatchingProvider, \"jbj/VXU/OUrX6pXQ4xUncL6xIxk=\");\n_c = MatchingProvider;\nexport const useMatching = () => {\n  _s2();\n  const context = useContext(MatchingContext);\n  if (!context) {\n    throw new Error('useMatching must be used within a MatchingProvider');\n  }\n  return context;\n};\n_s2(useMatching, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default MatchingContext;\nvar _c;\n$RefreshReg$(_c, \"MatchingProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","matchingAPI","jsxDEV","_jsxDEV","initialState","matchHistory","recentMatches","currentMatch","loading","error","types","FETCH_HISTORY_REQUEST","FETCH_HISTORY_SUCCESS","FETCH_HISTORY_FAILURE","FETCH_RECENT_MATCHES_REQUEST","FETCH_RECENT_MATCHES_SUCCESS","FETCH_RECENT_MATCHES_FAILURE","SET_CURRENT_MATCH","CLEAR_CURRENT_MATCH","PERFORM_MATCH_REQUEST","PERFORM_MATCH_SUCCESS","PERFORM_MATCH_FAILURE","matchingReducer","state","action","type","payload","slice","MatchingContext","MatchingProvider","children","_s","dispatch","fetchRecentMatches","fetchMatchHistory","params","_response$data","response","getMatchingHistory","data","Array","isArray","message","limit","fetchMatchById","id","getMatchingById","performMatching","resumeType","resumeData","vacancyType","vacancyData","matchResumeFileToVacancyUrl","matchResumeFileToVacancyText","matchResumeUrlToVacancyUrl","matchResumeUrlToVacancyText","matchResumeTextToVacancyUrl","matchResumeTextToVacancyText","setCurrentMatch","match","clearCurrentMatch","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useMatching","_s2","context","Error","$RefreshReg$"],"sources":["/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/context/MatchingContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { matchingAPI } from '../utils/api';\n\n// Начальное состояние\nconst initialState = {\n  matchHistory: [],\n  recentMatches: [],\n  currentMatch: null,\n  loading: false,\n  error: null\n};\n\n// Типы действий\nconst types = {\n  FETCH_HISTORY_REQUEST: 'FETCH_HISTORY_REQUEST',\n  FETCH_HISTORY_SUCCESS: 'FETCH_HISTORY_SUCCESS',\n  FETCH_HISTORY_FAILURE: 'FETCH_HISTORY_FAILURE',\n  FETCH_RECENT_MATCHES_REQUEST: 'FETCH_RECENT_MATCHES_REQUEST',\n  FETCH_RECENT_MATCHES_SUCCESS: 'FETCH_RECENT_MATCHES_SUCCESS',\n  FETCH_RECENT_MATCHES_FAILURE: 'FETCH_RECENT_MATCHES_FAILURE',\n  SET_CURRENT_MATCH: 'SET_CURRENT_MATCH',\n  CLEAR_CURRENT_MATCH: 'CLEAR_CURRENT_MATCH',\n  PERFORM_MATCH_REQUEST: 'PERFORM_MATCH_REQUEST',\n  PERFORM_MATCH_SUCCESS: 'PERFORM_MATCH_SUCCESS',\n  PERFORM_MATCH_FAILURE: 'PERFORM_MATCH_FAILURE'\n};\n\n// Редюсер для управления состоянием\nconst matchingReducer = (state, action) => {\n  switch (action.type) {\n    case types.FETCH_HISTORY_REQUEST:\n    case types.FETCH_RECENT_MATCHES_REQUEST:\n    case types.PERFORM_MATCH_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.FETCH_HISTORY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        matchHistory: action.payload\n      };\n    case types.FETCH_RECENT_MATCHES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        recentMatches: action.payload\n      };\n    case types.PERFORM_MATCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        currentMatch: action.payload,\n        recentMatches: [action.payload, ...state.recentMatches].slice(0, 5)\n      };\n    case types.SET_CURRENT_MATCH:\n      return {\n        ...state,\n        currentMatch: action.payload\n      };\n    case types.CLEAR_CURRENT_MATCH:\n      return {\n        ...state,\n        currentMatch: null\n      };\n    case types.FETCH_HISTORY_FAILURE:\n    case types.FETCH_RECENT_MATCHES_FAILURE:\n    case types.PERFORM_MATCH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Создание контекста\nconst MatchingContext = createContext();\n\n// Провайдер контекста\nexport const MatchingProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(matchingReducer, initialState);\n\n  // Загрузка последних сопоставлений при инициализации\n  useEffect(() => {\n    fetchRecentMatches();\n  }, []);\n\n  // Функции для работы с API\n\n  // Получение истории сопоставлений\n  const fetchMatchHistory = useCallback(async (params) => {\n    dispatch({ type: types.FETCH_HISTORY_REQUEST });\n    try {\n      const response = await matchingAPI.getMatchingHistory(params);\n      const data = Array.isArray(response.data) ? response.data : response.data?.data || [];\n      dispatch({ \n        type: types.FETCH_HISTORY_SUCCESS, \n        payload: data\n      });\n    } catch (error) {\n      dispatch({ \n        type: types.FETCH_HISTORY_FAILURE, \n        payload: error.message \n      });\n    }\n  }, []);\n\n  // Получение последних сопоставлений\n  const fetchRecentMatches = async () => {\n    dispatch({ type: types.FETCH_RECENT_MATCHES_REQUEST });\n    try {\n      const response = await matchingAPI.getMatchingHistory({ limit: 5 });\n      dispatch({ \n        type: types.FETCH_RECENT_MATCHES_SUCCESS, \n        payload: response.data \n      });\n    } catch (error) {\n      dispatch({ \n        type: types.FETCH_RECENT_MATCHES_FAILURE, \n        payload: error.message \n      });\n    }\n  };\n\n  // Получение сопоставления по ID\n  const fetchMatchById = async (id) => {\n    dispatch({ type: types.PERFORM_MATCH_REQUEST });\n    try {\n      const response = await matchingAPI.getMatchingById(id);\n      dispatch({ \n        type: types.PERFORM_MATCH_SUCCESS, \n        payload: response.data \n      });\n    } catch (error) {\n      dispatch({ \n        type: types.PERFORM_MATCH_FAILURE, \n        payload: error.message \n      });\n    }\n  };\n\n  // Выполнение сопоставления резюме и вакансии\n  const performMatching = async (resumeType, resumeData, vacancyType, vacancyData) => {\n    dispatch({ type: types.PERFORM_MATCH_REQUEST });\n    try {\n      let response;\n\n      // Определение типа запроса на основе параметров\n      if (resumeType === 'file') {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeFileToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeFileToVacancyText(resumeData, vacancyData);\n        }\n      } else if (resumeType === 'url') {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeUrlToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeUrlToVacancyText(resumeData, vacancyData);\n        }\n      } else {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeTextToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeTextToVacancyText(resumeData, vacancyData);\n        }\n      }\n\n      dispatch({ \n        type: types.PERFORM_MATCH_SUCCESS, \n        payload: response.data \n      });\n      return response.data;\n    } catch (error) {\n      dispatch({ \n        type: types.PERFORM_MATCH_FAILURE, \n        payload: error.message \n      });\n      throw error;\n    }\n  };\n\n  // Установка текущего сопоставления\n  const setCurrentMatch = (match) => {\n    dispatch({ type: types.SET_CURRENT_MATCH, payload: match });\n  };\n\n  // Очистка текущего сопоставления\n  const clearCurrentMatch = () => {\n    dispatch({ type: types.CLEAR_CURRENT_MATCH });\n  };\n\n  // Значения и функции, предоставляемые контекстом\n  const value = {\n    ...state,\n    fetchMatchHistory,\n    fetchRecentMatches,\n    fetchMatchById,\n    performMatching,\n    setCurrentMatch,\n    clearCurrentMatch\n  };\n\n  return (\n    <MatchingContext.Provider value={value}>\n      {children}\n    </MatchingContext.Provider>\n  );\n};\n\n// Хук для использования контекста\nexport const useMatching = () => {\n  const context = useContext(MatchingContext);\n  if (!context) {\n    throw new Error('useMatching must be used within a MatchingProvider');\n  }\n  return context;\n};\n\nexport default MatchingContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}