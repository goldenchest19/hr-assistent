{"ast":null,"code":"import _objectSpread from\"/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{matchingAPI}from'../utils/api';// Начальное состояние\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={matchHistory:[],recentMatches:[],currentMatch:null,loading:false,error:null};// Типы действий\nconst types={FETCH_HISTORY_REQUEST:'FETCH_HISTORY_REQUEST',FETCH_HISTORY_SUCCESS:'FETCH_HISTORY_SUCCESS',FETCH_HISTORY_FAILURE:'FETCH_HISTORY_FAILURE',FETCH_RECENT_MATCHES_REQUEST:'FETCH_RECENT_MATCHES_REQUEST',FETCH_RECENT_MATCHES_SUCCESS:'FETCH_RECENT_MATCHES_SUCCESS',FETCH_RECENT_MATCHES_FAILURE:'FETCH_RECENT_MATCHES_FAILURE',SET_CURRENT_MATCH:'SET_CURRENT_MATCH',CLEAR_CURRENT_MATCH:'CLEAR_CURRENT_MATCH',PERFORM_MATCH_REQUEST:'PERFORM_MATCH_REQUEST',PERFORM_MATCH_SUCCESS:'PERFORM_MATCH_SUCCESS',PERFORM_MATCH_FAILURE:'PERFORM_MATCH_FAILURE'};// Редюсер для управления состоянием\nconst matchingReducer=(state,action)=>{switch(action.type){case types.FETCH_HISTORY_REQUEST:case types.FETCH_RECENT_MATCHES_REQUEST:case types.PERFORM_MATCH_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true,error:null});case types.FETCH_HISTORY_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,matchHistory:action.payload});case types.FETCH_RECENT_MATCHES_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,recentMatches:action.payload});case types.PERFORM_MATCH_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,currentMatch:action.payload,recentMatches:[action.payload,...state.recentMatches].slice(0,5)});case types.SET_CURRENT_MATCH:return _objectSpread(_objectSpread({},state),{},{currentMatch:action.payload});case types.CLEAR_CURRENT_MATCH:return _objectSpread(_objectSpread({},state),{},{currentMatch:null});case types.FETCH_HISTORY_FAILURE:case types.FETCH_RECENT_MATCHES_FAILURE:case types.PERFORM_MATCH_FAILURE:return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});default:return state;}};// Создание контекста\nconst MatchingContext=/*#__PURE__*/createContext();// Провайдер контекста\nexport const MatchingProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(matchingReducer,initialState);// Загрузка последних сопоставлений при инициализации\nuseEffect(()=>{fetchRecentMatches();},[]);// Функции для работы с API\n// Получение истории сопоставлений\nconst fetchMatchHistory=async params=>{dispatch({type:types.FETCH_HISTORY_REQUEST});try{const response=await matchingAPI.getMatchingHistory(params);dispatch({type:types.FETCH_HISTORY_SUCCESS,payload:response.data});}catch(error){dispatch({type:types.FETCH_HISTORY_FAILURE,payload:error.message});}};// Получение последних сопоставлений\nconst fetchRecentMatches=async()=>{dispatch({type:types.FETCH_RECENT_MATCHES_REQUEST});try{const response=await matchingAPI.getMatchingHistory({limit:5});dispatch({type:types.FETCH_RECENT_MATCHES_SUCCESS,payload:response.data});}catch(error){dispatch({type:types.FETCH_RECENT_MATCHES_FAILURE,payload:error.message});}};// Получение сопоставления по ID\nconst fetchMatchById=async id=>{dispatch({type:types.PERFORM_MATCH_REQUEST});try{const response=await matchingAPI.getMatchingById(id);dispatch({type:types.PERFORM_MATCH_SUCCESS,payload:response.data});}catch(error){dispatch({type:types.PERFORM_MATCH_FAILURE,payload:error.message});}};// Выполнение сопоставления резюме и вакансии\nconst performMatching=async(resumeType,resumeData,vacancyType,vacancyData)=>{dispatch({type:types.PERFORM_MATCH_REQUEST});try{let response;// Определение типа запроса на основе параметров\nif(resumeType==='file'){if(vacancyType==='url'){response=await matchingAPI.matchResumeFileToVacancyUrl(resumeData,vacancyData);}else{response=await matchingAPI.matchResumeFileToVacancyText(resumeData,vacancyData);}}else if(resumeType==='url'){if(vacancyType==='url'){response=await matchingAPI.matchResumeUrlToVacancyUrl(resumeData,vacancyData);}else{response=await matchingAPI.matchResumeUrlToVacancyText(resumeData,vacancyData);}}else{if(vacancyType==='url'){response=await matchingAPI.matchResumeTextToVacancyUrl(resumeData,vacancyData);}else{response=await matchingAPI.matchResumeTextToVacancyText(resumeData,vacancyData);}}dispatch({type:types.PERFORM_MATCH_SUCCESS,payload:response.data});return response.data;}catch(error){dispatch({type:types.PERFORM_MATCH_FAILURE,payload:error.message});throw error;}};// Установка текущего сопоставления\nconst setCurrentMatch=match=>{dispatch({type:types.SET_CURRENT_MATCH,payload:match});};// Очистка текущего сопоставления\nconst clearCurrentMatch=()=>{dispatch({type:types.CLEAR_CURRENT_MATCH});};// Значения и функции, предоставляемые контекстом\nconst value=_objectSpread(_objectSpread({},state),{},{fetchMatchHistory,fetchRecentMatches,fetchMatchById,performMatching,setCurrentMatch,clearCurrentMatch});return/*#__PURE__*/_jsx(MatchingContext.Provider,{value:value,children:children});};// Хук для использования контекста\nexport const useMatching=()=>{const context=useContext(MatchingContext);if(!context){throw new Error('useMatching must be used within a MatchingProvider');}return context;};export default MatchingContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","matchingAPI","jsx","_jsx","initialState","matchHistory","recentMatches","currentMatch","loading","error","types","FETCH_HISTORY_REQUEST","FETCH_HISTORY_SUCCESS","FETCH_HISTORY_FAILURE","FETCH_RECENT_MATCHES_REQUEST","FETCH_RECENT_MATCHES_SUCCESS","FETCH_RECENT_MATCHES_FAILURE","SET_CURRENT_MATCH","CLEAR_CURRENT_MATCH","PERFORM_MATCH_REQUEST","PERFORM_MATCH_SUCCESS","PERFORM_MATCH_FAILURE","matchingReducer","state","action","type","_objectSpread","payload","slice","MatchingContext","MatchingProvider","_ref","children","dispatch","fetchRecentMatches","fetchMatchHistory","params","response","getMatchingHistory","data","message","limit","fetchMatchById","id","getMatchingById","performMatching","resumeType","resumeData","vacancyType","vacancyData","matchResumeFileToVacancyUrl","matchResumeFileToVacancyText","matchResumeUrlToVacancyUrl","matchResumeUrlToVacancyText","matchResumeTextToVacancyUrl","matchResumeTextToVacancyText","setCurrentMatch","match","clearCurrentMatch","value","Provider","useMatching","context","Error"],"sources":["/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/context/MatchingContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { matchingAPI } from '../utils/api';\n\n// Начальное состояние\nconst initialState = {\n  matchHistory: [],\n  recentMatches: [],\n  currentMatch: null,\n  loading: false,\n  error: null\n};\n\n// Типы действий\nconst types = {\n  FETCH_HISTORY_REQUEST: 'FETCH_HISTORY_REQUEST',\n  FETCH_HISTORY_SUCCESS: 'FETCH_HISTORY_SUCCESS',\n  FETCH_HISTORY_FAILURE: 'FETCH_HISTORY_FAILURE',\n  FETCH_RECENT_MATCHES_REQUEST: 'FETCH_RECENT_MATCHES_REQUEST',\n  FETCH_RECENT_MATCHES_SUCCESS: 'FETCH_RECENT_MATCHES_SUCCESS',\n  FETCH_RECENT_MATCHES_FAILURE: 'FETCH_RECENT_MATCHES_FAILURE',\n  SET_CURRENT_MATCH: 'SET_CURRENT_MATCH',\n  CLEAR_CURRENT_MATCH: 'CLEAR_CURRENT_MATCH',\n  PERFORM_MATCH_REQUEST: 'PERFORM_MATCH_REQUEST',\n  PERFORM_MATCH_SUCCESS: 'PERFORM_MATCH_SUCCESS',\n  PERFORM_MATCH_FAILURE: 'PERFORM_MATCH_FAILURE'\n};\n\n// Редюсер для управления состоянием\nconst matchingReducer = (state, action) => {\n  switch (action.type) {\n    case types.FETCH_HISTORY_REQUEST:\n    case types.FETCH_RECENT_MATCHES_REQUEST:\n    case types.PERFORM_MATCH_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.FETCH_HISTORY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        matchHistory: action.payload\n      };\n    case types.FETCH_RECENT_MATCHES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        recentMatches: action.payload\n      };\n    case types.PERFORM_MATCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        currentMatch: action.payload,\n        recentMatches: [action.payload, ...state.recentMatches].slice(0, 5)\n      };\n    case types.SET_CURRENT_MATCH:\n      return {\n        ...state,\n        currentMatch: action.payload\n      };\n    case types.CLEAR_CURRENT_MATCH:\n      return {\n        ...state,\n        currentMatch: null\n      };\n    case types.FETCH_HISTORY_FAILURE:\n    case types.FETCH_RECENT_MATCHES_FAILURE:\n    case types.PERFORM_MATCH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Создание контекста\nconst MatchingContext = createContext();\n\n// Провайдер контекста\nexport const MatchingProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(matchingReducer, initialState);\n\n  // Загрузка последних сопоставлений при инициализации\n  useEffect(() => {\n    fetchRecentMatches();\n  }, []);\n\n  // Функции для работы с API\n\n  // Получение истории сопоставлений\n  const fetchMatchHistory = async (params) => {\n    dispatch({ type: types.FETCH_HISTORY_REQUEST });\n    try {\n      const response = await matchingAPI.getMatchingHistory(params);\n      dispatch({ \n        type: types.FETCH_HISTORY_SUCCESS, \n        payload: response.data \n      });\n    } catch (error) {\n      dispatch({ \n        type: types.FETCH_HISTORY_FAILURE, \n        payload: error.message \n      });\n    }\n  };\n\n  // Получение последних сопоставлений\n  const fetchRecentMatches = async () => {\n    dispatch({ type: types.FETCH_RECENT_MATCHES_REQUEST });\n    try {\n      const response = await matchingAPI.getMatchingHistory({ limit: 5 });\n      dispatch({ \n        type: types.FETCH_RECENT_MATCHES_SUCCESS, \n        payload: response.data \n      });\n    } catch (error) {\n      dispatch({ \n        type: types.FETCH_RECENT_MATCHES_FAILURE, \n        payload: error.message \n      });\n    }\n  };\n\n  // Получение сопоставления по ID\n  const fetchMatchById = async (id) => {\n    dispatch({ type: types.PERFORM_MATCH_REQUEST });\n    try {\n      const response = await matchingAPI.getMatchingById(id);\n      dispatch({ \n        type: types.PERFORM_MATCH_SUCCESS, \n        payload: response.data \n      });\n    } catch (error) {\n      dispatch({ \n        type: types.PERFORM_MATCH_FAILURE, \n        payload: error.message \n      });\n    }\n  };\n\n  // Выполнение сопоставления резюме и вакансии\n  const performMatching = async (resumeType, resumeData, vacancyType, vacancyData) => {\n    dispatch({ type: types.PERFORM_MATCH_REQUEST });\n    try {\n      let response;\n\n      // Определение типа запроса на основе параметров\n      if (resumeType === 'file') {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeFileToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeFileToVacancyText(resumeData, vacancyData);\n        }\n      } else if (resumeType === 'url') {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeUrlToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeUrlToVacancyText(resumeData, vacancyData);\n        }\n      } else {\n        if (vacancyType === 'url') {\n          response = await matchingAPI.matchResumeTextToVacancyUrl(resumeData, vacancyData);\n        } else {\n          response = await matchingAPI.matchResumeTextToVacancyText(resumeData, vacancyData);\n        }\n      }\n\n      dispatch({ \n        type: types.PERFORM_MATCH_SUCCESS, \n        payload: response.data \n      });\n      return response.data;\n    } catch (error) {\n      dispatch({ \n        type: types.PERFORM_MATCH_FAILURE, \n        payload: error.message \n      });\n      throw error;\n    }\n  };\n\n  // Установка текущего сопоставления\n  const setCurrentMatch = (match) => {\n    dispatch({ type: types.SET_CURRENT_MATCH, payload: match });\n  };\n\n  // Очистка текущего сопоставления\n  const clearCurrentMatch = () => {\n    dispatch({ type: types.CLEAR_CURRENT_MATCH });\n  };\n\n  // Значения и функции, предоставляемые контекстом\n  const value = {\n    ...state,\n    fetchMatchHistory,\n    fetchRecentMatches,\n    fetchMatchById,\n    performMatching,\n    setCurrentMatch,\n    clearCurrentMatch\n  };\n\n  return (\n    <MatchingContext.Provider value={value}>\n      {children}\n    </MatchingContext.Provider>\n  );\n};\n\n// Хук для использования контекста\nexport const useMatching = () => {\n  const context = useContext(MatchingContext);\n  if (!context) {\n    throw new Error('useMatching must be used within a MatchingProvider');\n  }\n  return context;\n};\n\nexport default MatchingContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}