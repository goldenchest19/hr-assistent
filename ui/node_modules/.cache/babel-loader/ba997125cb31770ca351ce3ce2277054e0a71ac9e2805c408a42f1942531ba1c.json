{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/components/Candidates/CandidateImport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Tabs, Tab, Box, Typography, Paper, IconButton, CircularProgress, Alert, Snackbar, Divider, Input, InputLabel, FormControl } from '@mui/material';\nimport { ContentPaste as PasteIcon, Close as CloseIcon, Upload as UploadIcon, Description as FileIcon } from '@mui/icons-material';\n\n// Примеры форматов импорта\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sampleFormats = {\n  text: `ФИО: Алексей Иванов\nДолжность: Frontend-разработчик\nМестоположение: Москва\nЗарплата: 150 000 ₽\nОпыт работы: 4 года\nОбразование: Высшее, МГТУ им. Баумана\nО себе: Опытный frontend-разработчик с опытом создания современных веб-приложений...\nНавыки: React, JavaScript, TypeScript, HTML, CSS\nEmail: alexey@example.com\nТелефон: +7 (900) 123-45-67\n`\n};\nconst CandidateImport = ({\n  open,\n  onClose,\n  onImport\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState(0);\n  const [textContent, setTextContent] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [email, setEmail] = useState('');\n\n  // Обработчик изменения вкладки\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n    setError(null);\n  };\n\n  // Обработчик изменения текстового содержимого\n  const handleTextChange = e => {\n    setTextContent(e.target.value);\n    if (error) setError(null);\n  };\n\n  // Обработчик изменения файла\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setFile(e.target.files[0]);\n      if (error) setError(null);\n    }\n  };\n\n  // Обработчик изменения email\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    if (error) setError(null);\n  };\n\n  // Обработчик вставки примера\n  const handlePasteSample = () => {\n    setTextContent(sampleFormats.text);\n  };\n\n  // Обработчик импорта\n  const handleImport = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (activeTab === 0) {\n        // Импорт из текста\n        if (!textContent.trim()) {\n          throw new Error('Пожалуйста, введите текст для импорта');\n        }\n        const parsedCandidate = parseTextToCandidate(textContent);\n        if (onImport) {\n          onImport(parsedCandidate);\n        }\n        setSnackbarOpen(true);\n        handleClose();\n      } else {\n        // Импорт из файла\n        if (!file) {\n          throw new Error('Пожалуйста, выберите файл для импорта');\n        }\n        if (!email) {\n          throw new Error('Пожалуйста, укажите email для резюме');\n        }\n        const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n        if (!allowedTypes.includes(file.type)) {\n          throw new Error('Поддерживаются только файлы форматов PDF, DOC и DOCX');\n        }\n        const formData = new FormData();\n        formData.append('email', email);\n        formData.append('file', file);\n        const auth = localStorage.getItem('hr_partner_auth');\n        const token = auth ? JSON.parse(auth).token : null;\n        const response = await fetch('http://localhost:8081/api/resumes/upload', {\n          method: 'POST',\n          headers: {\n            ...(token ? {\n              'Authorization': `Bearer ${token}`\n            } : {})\n          },\n          body: formData\n        });\n        if (!response.ok) throw new Error('Ошибка при загрузке резюме');\n        if (onImport) {\n          onImport(); // Триггер обновления списка\n        }\n        setSnackbarOpen(true);\n        handleClose();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Функция для парсинга текста в структуру кандидата\n  const parseTextToCandidate = text => {\n    const lines = text.split('\\n');\n    const candidate = {\n      status: 'new',\n      skills: [],\n      rating: 3\n    };\n    lines.forEach(line => {\n      const [key, value] = line.split(':').map(item => item.trim());\n      if (!key || !value) return;\n      switch (key.toLowerCase()) {\n        case 'фио':\n          candidate.name = value;\n          break;\n        case 'должность':\n          candidate.position = value;\n          break;\n        case 'местоположение':\n          candidate.location = value;\n          break;\n        case 'зарплата':\n          candidate.salary = value;\n          break;\n        case 'опыт работы':\n          candidate.experience = value;\n          break;\n        case 'образование':\n          candidate.education = value;\n          break;\n        case 'о себе':\n          candidate.about = value;\n          break;\n        case 'навыки':\n          candidate.skills = value.split(',').map(skill => skill.trim());\n          break;\n        case 'email':\n          candidate.email = value;\n          break;\n        case 'телефон':\n          candidate.phone = value;\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Проверка обязательных полей\n    if (!candidate.name) {\n      throw new Error('Не указано ФИО кандидата');\n    }\n    if (!candidate.position) {\n      throw new Error('Не указана должность кандидата');\n    }\n    if (!candidate.email) {\n      throw new Error('Не указан email кандидата');\n    }\n    return candidate;\n  };\n\n  // Обработчик закрытия диалога\n  const handleClose = () => {\n    setActiveTab(0);\n    setTextContent('');\n    setFile(null);\n    setError(null);\n    setEmail('');\n    onClose();\n  };\n\n  // Обработчик закрытия снэкбара\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [\"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435 \\u043A\\u0430\\u043D\\u0434\\u0438\\u0434\\u0430\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: handleTabChange,\n          variant: \"fullWidth\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u0438\\u0437 \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u0438\\u0437 \\u0444\\u0430\\u0439\\u043B\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"\\u0412\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 \\\"\\u041A\\u043B\\u044E\\u0447: \\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\\\" \\u0434\\u043B\\u044F \\u043A\\u0430\\u0436\\u0434\\u043E\\u0439 \\u0441\\u0442\\u0440\\u043E\\u043A\\u0438. \\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u043A\\u043B\\u044E\\u0447\\u0438: \\u0424\\u0418\\u041E, \\u0414\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C, \\u041C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435, \\u0417\\u0430\\u0440\\u043F\\u043B\\u0430\\u0442\\u0430, \\u041E\\u043F\\u044B\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B, \\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435, \\u041E \\u0441\\u0435\\u0431\\u0435, \\u041D\\u0430\\u0432\\u044B\\u043A\\u0438, Email, \\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 10,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435...\",\n            value: textContent,\n            onChange: handleTextChange,\n            variant: \"outlined\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(PasteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 30\n              }, this),\n              size: \"small\",\n              onClick: handlePasteSample,\n              disabled: loading,\n              children: \"\\u0412\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u043C\\u0435\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 PDF, DOC \\u0438\\u043B\\u0438 DOCX. \\u0421\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430 \\u043F\\u043E\\u043F\\u044B\\u0442\\u0430\\u0435\\u0442\\u0441\\u044F \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438 \\u0438\\u0437\\u0432\\u043B\\u0435\\u0447\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            sx: {\n              p: 3,\n              textAlign: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                id: \"resume-file-input\",\n                type: \"file\",\n                inputProps: {\n                  accept: '.pdf,.doc,.docx,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n                },\n                onChange: handleFileChange,\n                sx: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  p: 3,\n                  border: '2px dashed #ccc',\n                  borderRadius: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n                  sx: {\n                    fontSize: 48,\n                    color: 'text.secondary',\n                    mb: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  gutterBottom: true,\n                  children: file ? file.name : 'Перетащите файл сюда или нажмите для выбора'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  display: \"block\",\n                  gutterBottom: true,\n                  children: \"\\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u044B: PDF, DOC, DOCX\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"resume-file-input\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    component: \"span\",\n                    startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 36\n                    }, this),\n                    sx: {\n                      mt: 2\n                    },\n                    children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 2,\n              bgcolor: 'grey.100'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435: \\u041F\\u0440\\u0438 \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0435 \\u0438\\u0437 \\u0444\\u0430\\u0439\\u043B\\u0430 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u044B \\u043D\\u0435\\u0442\\u043E\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438 \\u0432 \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u043C \\u0438\\u0437\\u0432\\u043B\\u0435\\u0447\\u0435\\u043D\\u0438\\u0438 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438. \\u041F\\u043E\\u0441\\u043B\\u0435 \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C\\u0442\\u0435 \\u0438 \\u043E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u0438 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          px: 3,\n          pb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"inherit\",\n          disabled: loading,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 67\n          }, this),\n          onClick: handleImport,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading || activeTab === 0 && !textContent.trim() || activeTab === 1 && !file,\n          children: loading ? 'Импортирую...' : 'Импортировать'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 4000,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u0420\\u0435\\u0437\\u044E\\u043C\\u0435 \\u043A\\u0430\\u043D\\u0434\\u0438\\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CandidateImport, \"/P77mjYY6tS1tKoSJY88eKJ5Koc=\");\n_c = CandidateImport;\nexport default CandidateImport;\nvar _c;\n$RefreshReg$(_c, \"CandidateImport\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Tabs","Tab","Box","Typography","Paper","IconButton","CircularProgress","Alert","Snackbar","Divider","Input","InputLabel","FormControl","ContentPaste","PasteIcon","Close","CloseIcon","Upload","UploadIcon","Description","FileIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","sampleFormats","text","CandidateImport","open","onClose","onImport","_s","activeTab","setActiveTab","textContent","setTextContent","file","setFile","error","setError","loading","setLoading","snackbarOpen","setSnackbarOpen","email","setEmail","handleTabChange","event","newValue","handleTextChange","e","target","value","handleFileChange","files","length","handleEmailChange","handlePasteSample","handleImport","trim","Error","parsedCandidate","parseTextToCandidate","handleClose","allowedTypes","includes","type","formData","FormData","append","auth","localStorage","getItem","token","JSON","parse","response","fetch","method","headers","body","ok","err","message","lines","split","candidate","status","skills","rating","forEach","line","key","map","item","toLowerCase","name","position","location","salary","experience","education","about","skill","phone","handleSnackbarClose","children","fullWidth","maxWidth","display","justifyContent","alignItems","edge","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sx","borderBottom","borderColor","onChange","variant","centered","label","severity","mb","multiline","rows","placeholder","disabled","mt","startIcon","size","p","textAlign","id","inputProps","accept","border","borderRadius","fontSize","color","gutterBottom","htmlFor","component","elevation","bgcolor","px","pb","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/components/Candidates/CandidateImport.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Paper,\n  IconButton,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  Divider,\n  Input,\n  InputLabel,\n  FormControl\n} from '@mui/material';\nimport {\n  ContentPaste as PasteIcon,\n  Close as CloseIcon,\n  Upload as UploadIcon,\n  Description as FileIcon\n} from '@mui/icons-material';\n\n// Примеры форматов импорта\nconst sampleFormats = {\n  text: `ФИО: Алексей Иванов\nДолжность: Frontend-разработчик\nМестоположение: Москва\nЗарплата: 150 000 ₽\nОпыт работы: 4 года\nОбразование: Высшее, МГТУ им. Баумана\nО себе: Опытный frontend-разработчик с опытом создания современных веб-приложений...\nНавыки: React, JavaScript, TypeScript, HTML, CSS\nEmail: alexey@example.com\nТелефон: +7 (900) 123-45-67\n`\n};\n\nconst CandidateImport = ({ open, onClose, onImport }) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [textContent, setTextContent] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [email, setEmail] = useState('');\n  \n  // Обработчик изменения вкладки\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n    setError(null);\n  };\n  \n  // Обработчик изменения текстового содержимого\n  const handleTextChange = (e) => {\n    setTextContent(e.target.value);\n    if (error) setError(null);\n  };\n  \n  // Обработчик изменения файла\n  const handleFileChange = (e) => {\n    if (e.target.files.length > 0) {\n      setFile(e.target.files[0]);\n      if (error) setError(null);\n    }\n  };\n  \n  // Обработчик изменения email\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n    if (error) setError(null);\n  };\n  \n  // Обработчик вставки примера\n  const handlePasteSample = () => {\n    setTextContent(sampleFormats.text);\n  };\n  \n  // Обработчик импорта\n  const handleImport = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (activeTab === 0) { // Импорт из текста\n        if (!textContent.trim()) {\n          throw new Error('Пожалуйста, введите текст для импорта');\n        }\n        const parsedCandidate = parseTextToCandidate(textContent);\n        if (onImport) {\n          onImport(parsedCandidate);\n        }\n        setSnackbarOpen(true);\n        handleClose();\n      } else { // Импорт из файла\n        if (!file) {\n          throw new Error('Пожалуйста, выберите файл для импорта');\n        }\n        if (!email) {\n          throw new Error('Пожалуйста, укажите email для резюме');\n        }\n        const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n        if (!allowedTypes.includes(file.type)) {\n          throw new Error('Поддерживаются только файлы форматов PDF, DOC и DOCX');\n        }\n        const formData = new FormData();\n        formData.append('email', email);\n        formData.append('file', file);\n        const auth = localStorage.getItem('hr_partner_auth');\n        const token = auth ? JSON.parse(auth).token : null;\n        const response = await fetch('http://localhost:8081/api/resumes/upload', {\n          method: 'POST',\n          headers: {\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n          },\n          body: formData\n        });\n        if (!response.ok) throw new Error('Ошибка при загрузке резюме');\n        if (onImport) {\n          onImport(); // Триггер обновления списка\n        }\n        setSnackbarOpen(true);\n        handleClose();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Функция для парсинга текста в структуру кандидата\n  const parseTextToCandidate = (text) => {\n    const lines = text.split('\\n');\n    const candidate = {\n      status: 'new',\n      skills: [],\n      rating: 3\n    };\n    \n    lines.forEach(line => {\n      const [key, value] = line.split(':').map(item => item.trim());\n      if (!key || !value) return;\n      \n      switch (key.toLowerCase()) {\n        case 'фио':\n          candidate.name = value;\n          break;\n        case 'должность':\n          candidate.position = value;\n          break;\n        case 'местоположение':\n          candidate.location = value;\n          break;\n        case 'зарплата':\n          candidate.salary = value;\n          break;\n        case 'опыт работы':\n          candidate.experience = value;\n          break;\n        case 'образование':\n          candidate.education = value;\n          break;\n        case 'о себе':\n          candidate.about = value;\n          break;\n        case 'навыки':\n          candidate.skills = value.split(',').map(skill => skill.trim());\n          break;\n        case 'email':\n          candidate.email = value;\n          break;\n        case 'телефон':\n          candidate.phone = value;\n          break;\n        default:\n          break;\n      }\n    });\n    \n    // Проверка обязательных полей\n    if (!candidate.name) {\n      throw new Error('Не указано ФИО кандидата');\n    }\n    if (!candidate.position) {\n      throw new Error('Не указана должность кандидата');\n    }\n    if (!candidate.email) {\n      throw new Error('Не указан email кандидата');\n    }\n    \n    return candidate;\n  };\n  \n  // Обработчик закрытия диалога\n  const handleClose = () => {\n    setActiveTab(0);\n    setTextContent('');\n    setFile(null);\n    setError(null);\n    setEmail('');\n    onClose();\n  };\n  \n  // Обработчик закрытия снэкбара\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  \n  return (\n    <>\n      <Dialog \n        open={open} \n        onClose={handleClose}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            Импортировать резюме кандидата\n            <IconButton edge=\"end\" onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n        </DialogTitle>\n        <Divider />\n        \n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs \n            value={activeTab} \n            onChange={handleTabChange} \n            variant=\"fullWidth\"\n            centered\n          >\n            <Tab label=\"Импорт из текста\" />\n            <Tab label=\"Импорт из файла\" />\n          </Tabs>\n        </Box>\n        \n        <DialogContent>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {activeTab === 0 ? (\n            <Box>\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                Вставьте текст резюме в формате \"Ключ: Значение\" для каждой строки. Поддерживаемые ключи: ФИО, Должность, Местоположение, Зарплата, Опыт работы, Образование, О себе, Навыки, Email, Телефон.\n              </Typography>\n              \n              <TextField\n                fullWidth\n                multiline\n                rows={10}\n                placeholder=\"Введите текст резюме...\"\n                value={textContent}\n                onChange={handleTextChange}\n                variant=\"outlined\"\n                disabled={loading}\n              />\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 1 }}>\n                <Button \n                  startIcon={<PasteIcon />} \n                  size=\"small\" \n                  onClick={handlePasteSample}\n                  disabled={loading}\n                >\n                  Вставить пример\n                </Button>\n              </Box>\n            </Box>\n          ) : (\n            <Box>\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                Загрузите файл резюме в формате PDF, DOC или DOCX. Система попытается автоматически извлечь информацию.\n              </Typography>\n              \n              <Paper variant=\"outlined\" sx={{ p: 3, textAlign: 'center', mb: 2 }}>\n                <FormControl fullWidth>\n                  <Input\n                    id=\"resume-file-input\"\n                    type=\"file\"\n                    inputProps={{\n                      accept: '.pdf,.doc,.docx,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n                    }}\n                    onChange={handleFileChange}\n                    sx={{ display: 'none' }}\n                  />\n                  <Box sx={{ textAlign: 'center', p: 3, border: '2px dashed #ccc', borderRadius: 1 }}>\n                    <FileIcon sx={{ fontSize: 48, color: 'text.secondary', mb: 1 }} />\n                    <Typography variant=\"body1\" gutterBottom>\n                      {file ? file.name : 'Перетащите файл сюда или нажмите для выбора'}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\" gutterBottom>\n                      Поддерживаемые форматы: PDF, DOC, DOCX\n                    </Typography>\n                    <InputLabel htmlFor=\"resume-file-input\">\n                      <Button \n                        variant=\"contained\" \n                        component=\"span\"\n                        startIcon={<UploadIcon />}\n                        sx={{ mt: 2 }}\n                      >\n                        Выбрать файл\n                      </Button>\n                    </InputLabel>\n                  </Box>\n                </FormControl>\n              </Paper>\n              \n              <Paper elevation={0} sx={{ p: 2, bgcolor: 'grey.100' }}>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  Примечание: При импорте из файла возможны неточности в автоматическом извлечении информации. После импорта проверьте и отредактируйте данные при необходимости.\n                </Typography>\n              </Paper>\n            </Box>\n          )}\n        </DialogContent>\n        \n        <DialogActions sx={{ px: 3, pb: 3 }}>\n          <Button onClick={handleClose} color=\"inherit\" disabled={loading}>\n            Отмена\n          </Button>\n          <Button\n            startIcon={loading ? <CircularProgress size={24} /> : <UploadIcon />}\n            onClick={handleImport}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || (activeTab === 0 && !textContent.trim()) || (activeTab === 1 && !file)}\n          >\n            {loading ? 'Импортирую...' : 'Импортировать'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      >\n        <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n          Резюме кандидата успешно импортировано\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default CandidateImport; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}