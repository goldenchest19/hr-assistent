{"ast":null,"code":"import React,{useState}from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,Button,TextField,Tabs,Tab,Box,Typography,Paper,IconButton,CircularProgress,Alert,Snackbar,Divider}from'@mui/material';import{ContentPaste as PasteIcon,Link as LinkIcon,Close as CloseIcon,Upload as UploadIcon}from'@mui/icons-material';// Примеры форматов импорта\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const sampleFormats={text:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: Frontend-\\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\n\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F: Tech Solutions\\n\\u041C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435: \\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\\n\\u0417\\u0430\\u0440\\u043F\\u043B\\u0430\\u0442\\u0430: 120 000 - 180 000 \\u20BD\\n\\u041E\\u043F\\u044B\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B: 3-5 \\u043B\\u0435\\u0442\\n\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \\u041C\\u044B \\u0438\\u0449\\u0435\\u043C \\u043E\\u043F\\u044B\\u0442\\u043D\\u043E\\u0433\\u043E Frontend-\\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u0430 \\u0441\\u043E \\u0437\\u043D\\u0430\\u043D\\u0438\\u0435\\u043C React \\u0438 TypeScript...\\n\\u041D\\u0430\\u0432\\u044B\\u043A\\u0438: React, JavaScript, TypeScript, CSS, HTML\\n\",link:'https://example.com/job/frontend-developer'};const VacancyImport=_ref=>{let{open,onClose,onImport}=_ref;const[activeTab,setActiveTab]=useState(0);const[textContent,setTextContent]=useState('');const[urlLink,setUrlLink]=useState('');const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const[snackbarOpen,setSnackbarOpen]=useState(false);// Обработчик изменения вкладки\nconst handleTabChange=(event,newValue)=>{setActiveTab(newValue);setError(null);};// Обработчик изменения текстового содержимого\nconst handleTextChange=e=>{setTextContent(e.target.value);if(error)setError(null);};// Обработчик изменения URL\nconst handleUrlChange=e=>{setUrlLink(e.target.value);if(error)setError(null);};// Обработчик вставки примера\nconst handlePasteSample=()=>{if(activeTab===0){setTextContent(sampleFormats.text);}else{setUrlLink(sampleFormats.link);}};// Обработчик импорта\nconst handleImport=async()=>{setLoading(true);setError(null);try{if(activeTab===0){// Импорт из текста\nif(!textContent.trim()){throw new Error('Пожалуйста, введите текст для импорта');}// Парсинг текста\nconst parsedVacancy=parseTextToVacancy(textContent);// Имитация задержки запроса\nawait new Promise(resolve=>setTimeout(resolve,1000));if(onImport){onImport(parsedVacancy);}setSnackbarOpen(true);handleClose();}else{// Импорт из ссылки\nif(!urlLink.trim()){throw new Error('Пожалуйста, введите ссылку для импорта');}if(!urlLink.startsWith('http')){throw new Error('Пожалуйста, введите корректную ссылку, начинающуюся с http:// или https://');}// Имитация задержки запроса\nawait new Promise(resolve=>setTimeout(resolve,1000));// Заглушка для импорта из ссылки (в реальном приложении здесь будет запрос к API)\nconst mockVacancy={title:'Импортированная вакансия',company:'Компания из ссылки',location:'Удаленно',salary:'100 000 - 150 000 ₽',experience:'1-3 года',description:'Эта вакансия была импортирована по ссылке: '+urlLink,skills:['Imported','From','Link'],status:'active'};if(onImport){onImport(mockVacancy);}setSnackbarOpen(true);handleClose();}}catch(err){setError(err.message);}finally{setLoading(false);}};// Функция для парсинга текста в структуру вакансии\nconst parseTextToVacancy=text=>{const lines=text.split('\\n');const vacancy={status:'active',skills:[]};lines.forEach(line=>{const[key,value]=line.split(':').map(item=>item.trim());if(!key||!value)return;switch(key.toLowerCase()){case'название':vacancy.title=value;break;case'компания':vacancy.company=value;break;case'местоположение':vacancy.location=value;break;case'зарплата':vacancy.salary=value;break;case'опыт работы':vacancy.experience=value;break;case'описание':vacancy.description=value;break;case'навыки':vacancy.skills=value.split(',').map(skill=>skill.trim());break;case'статус':vacancy.status=value.toLowerCase()==='активная'?'active':'closed';break;default:break;}});// Проверка обязательных полей\nif(!vacancy.title){throw new Error('Не указано название вакансии');}if(!vacancy.company){throw new Error('Не указано название компании');}if(!vacancy.description){throw new Error('Не указано описание вакансии');}return vacancy;};// Обработчик закрытия диалога\nconst handleClose=()=>{setActiveTab(0);setTextContent('');setUrlLink('');setError(null);onClose();};// Обработчик закрытия снэкбара\nconst handleSnackbarClose=()=>{setSnackbarOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,fullWidth:true,maxWidth:\"md\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[\"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E\",/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,variant:\"fullWidth\",centered:true,children:[/*#__PURE__*/_jsx(Tab,{label:\"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u0438\\u0437 \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430\"}),/*#__PURE__*/_jsx(Tab,{label:\"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u043F\\u043E \\u0441\\u0441\\u044B\\u043B\\u043A\\u0435\"})]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),activeTab===0?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:\"\\u0412\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 \\\"\\u041A\\u043B\\u044E\\u0447: \\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\\\" \\u0434\\u043B\\u044F \\u043A\\u0430\\u0436\\u0434\\u043E\\u0439 \\u0441\\u0442\\u0440\\u043E\\u043A\\u0438. \\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u043A\\u043B\\u044E\\u0447\\u0438: \\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435, \\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F, \\u041C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435, \\u0417\\u0430\\u0440\\u043F\\u043B\\u0430\\u0442\\u0430, \\u041E\\u043F\\u044B\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B, \\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435, \\u041D\\u0430\\u0432\\u044B\\u043A\\u0438.\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:10,placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438...\",value:textContent,onChange:handleTextChange,variant:\"outlined\",disabled:loading}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mt:1},children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(PasteIcon,{}),size:\"small\",onClick:handlePasteSample,disabled:loading,children:\"\\u0412\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u043C\\u0435\\u0440\"})})]}):/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:\"\\u0412\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443 \\u043D\\u0430 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E, \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430 \\u043F\\u043E\\u043F\\u044B\\u0442\\u0430\\u0435\\u0442\\u0441\\u044F \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438 \\u0438\\u0437\\u0432\\u043B\\u0435\\u0447\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E.\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"https://example.com/job/123\",value:urlLink,onChange:handleUrlChange,variant:\"outlined\",disabled:loading,InputProps:{startAdornment:/*#__PURE__*/_jsx(LinkIcon,{color:\"action\",sx:{mr:1}})}}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mt:1},children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(PasteIcon,{}),size:\"small\",onClick:handlePasteSample,disabled:loading,children:\"\\u0412\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u043C\\u0435\\u0440\"})}),/*#__PURE__*/_jsxs(Paper,{elevation:0,sx:{p:2,bgcolor:'grey.100',mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"\\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u044B \\u0434\\u043B\\u044F \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0430:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"HeadHunter\"}),/*#__PURE__*/_jsx(\"li\",{children:\"SuperJob\"}),/*#__PURE__*/_jsx(\"li\",{children:\"LinkedIn\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Habr Career\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435: \\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C \\u043D\\u0435 \\u0434\\u043B\\u044F \\u0432\\u0441\\u0435\\u0445 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0439 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430\\u0445.\"})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{sx:{px:3,pb:3},children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,color:\"inherit\",disabled:loading,children:\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"}),/*#__PURE__*/_jsx(Button,{startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):/*#__PURE__*/_jsx(UploadIcon,{}),onClick:handleImport,variant:\"contained\",color:\"primary\",disabled:loading,children:loading?'Импортирую...':'Импортировать'})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbarOpen,autoHideDuration:4000,onClose:handleSnackbarClose,anchorOrigin:{vertical:'bottom',horizontal:'left'},children:/*#__PURE__*/_jsx(Alert,{onClose:handleSnackbarClose,severity:\"success\",sx:{width:'100%'},children:\"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044F \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\"})})]});};export default VacancyImport;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Tabs","Tab","Box","Typography","Paper","IconButton","CircularProgress","Alert","Snackbar","Divider","ContentPaste","PasteIcon","Link","LinkIcon","Close","CloseIcon","Upload","UploadIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","sampleFormats","text","link","VacancyImport","_ref","open","onClose","onImport","activeTab","setActiveTab","textContent","setTextContent","urlLink","setUrlLink","error","setError","loading","setLoading","snackbarOpen","setSnackbarOpen","handleTabChange","event","newValue","handleTextChange","e","target","value","handleUrlChange","handlePasteSample","handleImport","trim","Error","parsedVacancy","parseTextToVacancy","Promise","resolve","setTimeout","handleClose","startsWith","mockVacancy","title","company","location","salary","experience","description","skills","status","err","message","lines","split","vacancy","forEach","line","key","map","item","toLowerCase","skill","handleSnackbarClose","children","fullWidth","maxWidth","display","justifyContent","alignItems","edge","onClick","sx","borderBottom","borderColor","onChange","variant","centered","label","severity","mb","multiline","rows","placeholder","disabled","mt","startIcon","size","InputProps","startAdornment","color","mr","elevation","p","bgcolor","px","pb","autoHideDuration","anchorOrigin","vertical","horizontal","width"],"sources":["/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/components/Vacancies/VacancyImport.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Paper,\n  IconButton,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  Divider\n} from '@mui/material';\nimport {\n  ContentPaste as PasteIcon,\n  Link as LinkIcon,\n  Close as CloseIcon,\n  Upload as UploadIcon\n} from '@mui/icons-material';\n\n// Примеры форматов импорта\nconst sampleFormats = {\n  text: `Название: Frontend-разработчик\nКомпания: Tech Solutions\nМестоположение: Москва\nЗарплата: 120 000 - 180 000 ₽\nОпыт работы: 3-5 лет\nОписание: Мы ищем опытного Frontend-разработчика со знанием React и TypeScript...\nНавыки: React, JavaScript, TypeScript, CSS, HTML\n`,\n  \n  link: 'https://example.com/job/frontend-developer'\n};\n\nconst VacancyImport = ({ open, onClose, onImport }) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [textContent, setTextContent] = useState('');\n  const [urlLink, setUrlLink] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  \n  // Обработчик изменения вкладки\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n    setError(null);\n  };\n  \n  // Обработчик изменения текстового содержимого\n  const handleTextChange = (e) => {\n    setTextContent(e.target.value);\n    if (error) setError(null);\n  };\n  \n  // Обработчик изменения URL\n  const handleUrlChange = (e) => {\n    setUrlLink(e.target.value);\n    if (error) setError(null);\n  };\n  \n  // Обработчик вставки примера\n  const handlePasteSample = () => {\n    if (activeTab === 0) {\n      setTextContent(sampleFormats.text);\n    } else {\n      setUrlLink(sampleFormats.link);\n    }\n  };\n  \n  // Обработчик импорта\n  const handleImport = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (activeTab === 0) { // Импорт из текста\n        if (!textContent.trim()) {\n          throw new Error('Пожалуйста, введите текст для импорта');\n        }\n        \n        // Парсинг текста\n        const parsedVacancy = parseTextToVacancy(textContent);\n        \n        // Имитация задержки запроса\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        if (onImport) {\n          onImport(parsedVacancy);\n        }\n        \n        setSnackbarOpen(true);\n        handleClose();\n      } else { // Импорт из ссылки\n        if (!urlLink.trim()) {\n          throw new Error('Пожалуйста, введите ссылку для импорта');\n        }\n        \n        if (!urlLink.startsWith('http')) {\n          throw new Error('Пожалуйста, введите корректную ссылку, начинающуюся с http:// или https://');\n        }\n        \n        // Имитация задержки запроса\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Заглушка для импорта из ссылки (в реальном приложении здесь будет запрос к API)\n        const mockVacancy = {\n          title: 'Импортированная вакансия',\n          company: 'Компания из ссылки',\n          location: 'Удаленно',\n          salary: '100 000 - 150 000 ₽',\n          experience: '1-3 года',\n          description: 'Эта вакансия была импортирована по ссылке: ' + urlLink,\n          skills: ['Imported', 'From', 'Link'],\n          status: 'active'\n        };\n        \n        if (onImport) {\n          onImport(mockVacancy);\n        }\n        \n        setSnackbarOpen(true);\n        handleClose();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Функция для парсинга текста в структуру вакансии\n  const parseTextToVacancy = (text) => {\n    const lines = text.split('\\n');\n    const vacancy = {\n      status: 'active',\n      skills: []\n    };\n    \n    lines.forEach(line => {\n      const [key, value] = line.split(':').map(item => item.trim());\n      if (!key || !value) return;\n      \n      switch (key.toLowerCase()) {\n        case 'название':\n          vacancy.title = value;\n          break;\n        case 'компания':\n          vacancy.company = value;\n          break;\n        case 'местоположение':\n          vacancy.location = value;\n          break;\n        case 'зарплата':\n          vacancy.salary = value;\n          break;\n        case 'опыт работы':\n          vacancy.experience = value;\n          break;\n        case 'описание':\n          vacancy.description = value;\n          break;\n        case 'навыки':\n          vacancy.skills = value.split(',').map(skill => skill.trim());\n          break;\n        case 'статус':\n          vacancy.status = value.toLowerCase() === 'активная' ? 'active' : 'closed';\n          break;\n        default:\n          break;\n      }\n    });\n    \n    // Проверка обязательных полей\n    if (!vacancy.title) {\n      throw new Error('Не указано название вакансии');\n    }\n    if (!vacancy.company) {\n      throw new Error('Не указано название компании');\n    }\n    if (!vacancy.description) {\n      throw new Error('Не указано описание вакансии');\n    }\n    \n    return vacancy;\n  };\n  \n  // Обработчик закрытия диалога\n  const handleClose = () => {\n    setActiveTab(0);\n    setTextContent('');\n    setUrlLink('');\n    setError(null);\n    onClose();\n  };\n  \n  // Обработчик закрытия снэкбара\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  \n  return (\n    <>\n      <Dialog \n        open={open} \n        onClose={handleClose}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            Импортировать вакансию\n            <IconButton edge=\"end\" onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n        </DialogTitle>\n        <Divider />\n        \n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs \n            value={activeTab} \n            onChange={handleTabChange} \n            variant=\"fullWidth\"\n            centered\n          >\n            <Tab label=\"Импорт из текста\" />\n            <Tab label=\"Импорт по ссылке\" />\n          </Tabs>\n        </Box>\n        \n        <DialogContent>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {activeTab === 0 ? (\n            <Box>\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                Вставьте текст вакансии в формате \"Ключ: Значение\" для каждой строки. Поддерживаемые ключи: Название, Компания, Местоположение, Зарплата, Опыт работы, Описание, Навыки.\n              </Typography>\n              \n              <TextField\n                fullWidth\n                multiline\n                rows={10}\n                placeholder=\"Введите текст вакансии...\"\n                value={textContent}\n                onChange={handleTextChange}\n                variant=\"outlined\"\n                disabled={loading}\n              />\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 1 }}>\n                <Button \n                  startIcon={<PasteIcon />} \n                  size=\"small\" \n                  onClick={handlePasteSample}\n                  disabled={loading}\n                >\n                  Вставить пример\n                </Button>\n              </Box>\n            </Box>\n          ) : (\n            <Box>\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                Вставьте ссылку на вакансию, система попытается автоматически извлечь информацию.\n              </Typography>\n              \n              <TextField\n                fullWidth\n                placeholder=\"https://example.com/job/123\"\n                value={urlLink}\n                onChange={handleUrlChange}\n                variant=\"outlined\"\n                disabled={loading}\n                InputProps={{\n                  startAdornment: <LinkIcon color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 1 }}>\n                <Button \n                  startIcon={<PasteIcon />} \n                  size=\"small\" \n                  onClick={handlePasteSample}\n                  disabled={loading}\n                >\n                  Вставить пример\n                </Button>\n              </Box>\n              \n              <Paper elevation={0} sx={{ p: 2, bgcolor: 'grey.100', mt: 2 }}>\n                <Typography variant=\"body2\">\n                  Поддерживаемые платформы для импорта:\n                </Typography>\n                <ul>\n                  <li>HeadHunter</li>\n                  <li>SuperJob</li>\n                  <li>LinkedIn</li>\n                  <li>Habr Career</li>\n                </ul>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  Примечание: Импорт может работать не для всех вакансий на указанных платформах.\n                </Typography>\n              </Paper>\n            </Box>\n          )}\n        </DialogContent>\n        \n        <DialogActions sx={{ px: 3, pb: 3 }}>\n          <Button onClick={handleClose} color=\"inherit\" disabled={loading}>\n            Отмена\n          </Button>\n          <Button\n            startIcon={loading ? <CircularProgress size={24} /> : <UploadIcon />}\n            onClick={handleImport}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n          >\n            {loading ? 'Импортирую...' : 'Импортировать'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      >\n        <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n          Вакансия успешно импортирована\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default VacancyImport; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}