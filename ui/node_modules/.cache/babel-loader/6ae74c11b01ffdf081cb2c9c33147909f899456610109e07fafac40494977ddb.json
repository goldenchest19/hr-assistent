{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/components/Matching/MatchingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid, Card, CardHeader, CardContent, Button, Box, Tabs, Tab, TextField, Paper, CircularProgress, FormControl, Input, IconButton, Alert, Autocomplete, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { Link as LinkIcon, Close as CloseIcon, History as HistoryIcon } from '@mui/icons-material';\nimport MatchingResults from './MatchingResults';\nimport { useMatching } from '../../context/MatchingContext';\nimport { Link } from 'react-router-dom';\nimport { resumeAPI, vacancyAPI } from '../../utils/api';\n\n// Кастомные стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  uploadBox: {\n    border: '2px dashed #ccc',\n    padding: '20px',\n    textAlign: 'center',\n    borderRadius: '8px',\n    marginBottom: '20px',\n    transition: 'all 0.3s',\n    '&:hover': {\n      borderColor: '#1976d2',\n      backgroundColor: '#f0f4ff'\n    }\n  }\n};\nconst MatchingPage = () => {\n  _s();\n  // Состояния для вкладок\n  const [resumeTabValue, setResumeTabValue] = useState(0);\n  const [vacancyTabValue, setVacancyTabValue] = useState(0);\n\n  // Состояния для данных форм\n  const [resumeFile, setResumeFile] = useState(null);\n  const [resumeEmail, setResumeEmail] = useState('');\n  const [resumeUrl, setResumeUrl] = useState('');\n  const [resumeText, setResumeText] = useState('');\n  const [vacancyUrl, setVacancyUrl] = useState('');\n  const [vacancyText, setVacancyText] = useState('');\n\n  // Новые состояния для списков и выбранных элементов\n  const [resumes, setResumes] = useState([]);\n  const [vacancies, setVacancies] = useState([]);\n  const [selectedResume, setSelectedResume] = useState(null);\n  const [selectedVacancy, setSelectedVacancy] = useState(null);\n  const [matchingResult, setMatchingResult] = useState(null);\n  const [loadingDropdowns, setLoadingDropdowns] = useState(false);\n\n  // Получение состояния и функций из контекста\n  const {\n    currentMatch,\n    loading,\n    error: matchingError,\n    performMatching\n  } = useMatching();\n\n  // Локальная ошибка (для валидации форм)\n  const [error, setError] = useState(null);\n\n  // Новое состояние для модального окна\n  const [resultOpen, setResultOpen] = useState(false);\n\n  // Загрузка резюме и вакансий при монтировании\n  useEffect(() => {\n    setLoadingDropdowns(true);\n    Promise.all([resumeAPI.getAll(), vacancyAPI.getAll()]).then(([resumesRes, vacanciesRes]) => {\n      setResumes(resumesRes.data || []);\n      setVacancies(vacanciesRes.data || []);\n    }).catch(() => {\n      setError('Ошибка загрузки резюме или вакансий');\n    }).finally(() => setLoadingDropdowns(false));\n  }, []);\n\n  // Обработчики изменения вкладок\n  const handleResumeTabChange = (event, newValue) => {\n    setResumeTabValue(newValue);\n  };\n  const handleVacancyTabChange = (event, newValue) => {\n    setVacancyTabValue(newValue);\n  };\n\n  // Обработчики изменения файла и полей ввода\n  const handleResumeFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setResumeFile(event.target.files[0]);\n    }\n  };\n  const handleResumeUrlChange = event => {\n    setResumeUrl(event.target.value);\n  };\n  const handleResumeTextChange = event => {\n    setResumeText(event.target.value);\n  };\n  const handleResumeEmailChange = event => {\n    setResumeEmail(event.target.value);\n  };\n  const handleVacancyUrlChange = event => {\n    setVacancyUrl(event.target.value);\n  };\n  const handleVacancyTextChange = event => {\n    setVacancyText(event.target.value);\n  };\n\n  // Валидация форм\n  const validateForms = () => {\n    setError(null);\n\n    // Валидация формы резюме\n    if (resumeTabValue === 0) {\n      // Файл\n      if (!resumeFile) {\n        setError('Пожалуйста, выберите PDF файл резюме');\n        return false;\n      }\n      if (!resumeEmail || !resumeEmail.includes('@')) {\n        setError('Пожалуйста, введите корректный email');\n        return false;\n      }\n    } else if (resumeTabValue === 1) {\n      // URL\n      const cleanUrl = resumeUrl.startsWith('@') ? resumeUrl.substring(1) : resumeUrl.trim();\n      if (!cleanUrl || !cleanUrl.match(/^https?:\\/\\/(www\\.)?hh\\.ru\\/resume\\/\\w+/)) {\n        setError('Пожалуйста, введите корректную ссылку на резюме с hh.ru');\n        return false;\n      }\n    } else {\n      // Текст\n      if (!resumeText || resumeText.length < 50) {\n        setError('Пожалуйста, введите текст резюме (минимум 50 символов)');\n        return false;\n      }\n    }\n\n    // Валидация формы вакансии\n    if (vacancyTabValue === 0) {\n      // URL\n      const cleanUrl = vacancyUrl.startsWith('@') ? vacancyUrl.substring(1) : vacancyUrl.trim();\n      if (!cleanUrl || !cleanUrl.match(/^https?:\\/\\/(www\\.)?hh\\.ru\\/vacancy\\/\\d+/)) {\n        setError('Пожалуйста, введите корректную ссылку на вакансию с hh.ru');\n        return false;\n      }\n    } else {\n      // Текст\n      if (!vacancyText || vacancyText.length < 50) {\n        setError('Пожалуйста, введите текст вакансии (минимум 50 символов)');\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Обработчик запроса на сопоставление\n  const handleMatch = async () => {\n    if (!validateForms()) {\n      return;\n    }\n    try {\n      let resumeType, resumeData, vacancyType, vacancyData;\n\n      // Определение типа резюме и данных\n      if (resumeTabValue === 0) {\n        // Файл\n        resumeType = 'file';\n        resumeData = {\n          file: resumeFile,\n          email: resumeEmail\n        };\n      } else if (resumeTabValue === 1) {\n        // URL\n        resumeType = 'url';\n        resumeData = resumeUrl;\n      } else {\n        // Текст\n        resumeType = 'text';\n        resumeData = resumeText;\n      }\n\n      // Определение типа вакансии и данных\n      if (vacancyTabValue === 0) {\n        // URL\n        vacancyType = 'url';\n        vacancyData = vacancyUrl;\n      } else {\n        // Текст\n        vacancyType = 'text';\n        vacancyData = vacancyText;\n      }\n\n      // Вызов функции из контекста для выполнения сопоставления\n      await performMatching(resumeType, resumeData, vacancyType, vacancyData);\n    } catch (error) {\n      console.error('Error during matching:', error);\n      setError('Произошла ошибка при выполнении сопоставления. Пожалуйста, попробуйте еще раз.');\n    }\n  };\n\n  // Обработчик очистки форм\n  const handleClearForms = () => {\n    setResumeFile(null);\n    setResumeEmail('');\n    setResumeUrl('');\n    setResumeText('');\n    setVacancyUrl('');\n    setVacancyText('');\n    setError(null);\n  };\n\n  // Новый обработчик сопоставления по id\n  const handleIdMatch = async () => {\n    if (!selectedResume || !selectedVacancy) {\n      setError('Пожалуйста, выберите резюме и вакансию');\n      return;\n    }\n    setError(null);\n    setMatchingResult(null);\n    setLoadingDropdowns(true);\n    try {\n      const response = await fetch('http://localhost:8081/api/resume-vacancy-matches/full', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('hr_partner_auth') ? {\n            'Authorization': `Bearer ${JSON.parse(localStorage.getItem('hr_partner_auth')).token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          resumeId: selectedResume.id,\n          vacancyId: selectedVacancy.id\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка сопоставления');\n      const data = await response.json();\n      setMatchingResult(data);\n      setResultOpen(true);\n    } catch (e) {\n      setError('Ошибка сопоставления: ' + e.message);\n    } finally {\n      setLoadingDropdowns(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"\\u0421\\u043E\\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435 \\u0438 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/matching/history\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 22\n        }, this),\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0441\\u043E\\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3,\n        bgcolor: '#ffebee'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), matchingError && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: matchingError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        lg: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"\\u0420\\u0435\\u0437\\u044E\\u043C\\u0435\",\n                sx: {\n                  bgcolor: '#1976d2',\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: resumes,\n                  getOptionLabel: option => option && option.name && option.role ? `${option.name} (${option.role})` : option && option.name ? option.name : '',\n                  loading: loadingDropdowns,\n                  value: selectedResume,\n                  onChange: (_, value) => setSelectedResume(value),\n                  noOptionsText: loadingDropdowns ? 'Загрузка...' : 'Нет доступных резюме',\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435\",\n                    placeholder: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u0438\\u043C\\u044F...\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this),\n                  isOptionEqualToValue: (option, value) => option && value && option.id === value.id,\n                  sx: {\n                    minWidth: 240\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044F\",\n                sx: {\n                  bgcolor: '#1976d2',\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: vacancies,\n                  getOptionLabel: option => option && option.title && option.company ? `${option.title} (${option.company})` : option && option.title ? option.title : '',\n                  loading: loadingDropdowns,\n                  value: selectedVacancy,\n                  onChange: (_, value) => setSelectedVacancy(value),\n                  noOptionsText: loadingDropdowns ? 'Загрузка...' : 'Нет доступных вакансий',\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E\",\n                    placeholder: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435...\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this),\n                  isOptionEqualToValue: (option, value) => option && value && option.id === value.id,\n                  sx: {\n                    minWidth: 240\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            mb: 5,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: handleIdMatch,\n            disabled: loadingDropdowns || loading,\n            sx: {\n              mr: 2\n            },\n            children: loadingDropdowns ? 'Выполняется сопоставление...' : 'Выполнить сопоставление'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleClearForms,\n            disabled: loadingDropdowns || loading,\n            children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), loadingDropdowns && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        bgcolor: 'rgba(255,255,255,0.5)',\n        zIndex: 2000,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: resultOpen,\n      onClose: () => setResultOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u0441\\u043E\\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: matchingResult && /*#__PURE__*/_jsxDEV(MatchingResults, {\n          results: matchingResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setResultOpen(false),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchingPage, \"8Eot7AcmWtmRl/3UWAuvmXo/f7s=\", false, function () {\n  return [useMatching];\n});\n_c = MatchingPage;\nexport default MatchingPage;\nvar _c;\n$RefreshReg$(_c, \"MatchingPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Grid","Card","CardHeader","CardContent","Button","Box","Tabs","Tab","TextField","Paper","CircularProgress","FormControl","Input","IconButton","Alert","Autocomplete","Dialog","DialogTitle","DialogContent","DialogActions","Link","LinkIcon","Close","CloseIcon","History","HistoryIcon","MatchingResults","useMatching","resumeAPI","vacancyAPI","jsxDEV","_jsxDEV","styles","uploadBox","border","padding","textAlign","borderRadius","marginBottom","transition","borderColor","backgroundColor","MatchingPage","_s","resumeTabValue","setResumeTabValue","vacancyTabValue","setVacancyTabValue","resumeFile","setResumeFile","resumeEmail","setResumeEmail","resumeUrl","setResumeUrl","resumeText","setResumeText","vacancyUrl","setVacancyUrl","vacancyText","setVacancyText","resumes","setResumes","vacancies","setVacancies","selectedResume","setSelectedResume","selectedVacancy","setSelectedVacancy","matchingResult","setMatchingResult","loadingDropdowns","setLoadingDropdowns","currentMatch","loading","error","matchingError","performMatching","setError","resultOpen","setResultOpen","Promise","all","getAll","then","resumesRes","vacanciesRes","data","catch","finally","handleResumeTabChange","event","newValue","handleVacancyTabChange","handleResumeFileChange","target","files","handleResumeUrlChange","value","handleResumeTextChange","handleResumeEmailChange","handleVacancyUrlChange","handleVacancyTextChange","validateForms","includes","cleanUrl","startsWith","substring","trim","match","length","handleMatch","resumeType","resumeData","vacancyType","vacancyData","file","email","console","handleClearForms","handleIdMatch","response","fetch","method","headers","localStorage","getItem","JSON","parse","token","body","stringify","resumeId","id","vacancyId","ok","Error","json","e","message","maxWidth","sx","mt","mb","children","display","justifyContent","alignItems","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","to","startIcon","p","bgcolor","color","severity","container","spacing","item","xs","md","lg","sm","title","options","getOptionLabel","option","name","role","onChange","_","noOptionsText","renderInput","params","label","placeholder","fullWidth","isOptionEqualToValue","minWidth","company","size","onClick","disabled","mr","position","top","left","width","height","zIndex","open","onClose","results","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/ai_projects/hr-partner/UI/hr-app/src/components/Matching/MatchingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Box,\n  Tabs,\n  Tab,\n  TextField,\n  Paper,\n  CircularProgress,\n  FormControl,\n  Input,\n  IconButton,\n  Alert,\n  Autocomplete,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@mui/material';\nimport {\n  Link as LinkIcon,\n  Close as CloseIcon,\n  History as HistoryIcon\n} from '@mui/icons-material';\nimport MatchingResults from './MatchingResults';\nimport { useMatching } from '../../context/MatchingContext';\nimport { Link } from 'react-router-dom';\nimport { resumeAPI, vacancyAPI } from '../../utils/api';\n\n// Кастомные стили\nconst styles = {\n  uploadBox: {\n    border: '2px dashed #ccc',\n    padding: '20px',\n    textAlign: 'center',\n    borderRadius: '8px',\n    marginBottom: '20px',\n    transition: 'all 0.3s',\n    '&:hover': {\n      borderColor: '#1976d2',\n      backgroundColor: '#f0f4ff',\n    }\n  }\n};\n\nconst MatchingPage = () => {\n  // Состояния для вкладок\n  const [resumeTabValue, setResumeTabValue] = useState(0);\n  const [vacancyTabValue, setVacancyTabValue] = useState(0);\n\n  // Состояния для данных форм\n  const [resumeFile, setResumeFile] = useState(null);\n  const [resumeEmail, setResumeEmail] = useState('');\n  const [resumeUrl, setResumeUrl] = useState('');\n  const [resumeText, setResumeText] = useState('');\n  const [vacancyUrl, setVacancyUrl] = useState('');\n  const [vacancyText, setVacancyText] = useState('');\n\n  // Новые состояния для списков и выбранных элементов\n  const [resumes, setResumes] = useState([]);\n  const [vacancies, setVacancies] = useState([]);\n  const [selectedResume, setSelectedResume] = useState(null);\n  const [selectedVacancy, setSelectedVacancy] = useState(null);\n  const [matchingResult, setMatchingResult] = useState(null);\n  const [loadingDropdowns, setLoadingDropdowns] = useState(false);\n\n  // Получение состояния и функций из контекста\n  const { currentMatch, loading, error: matchingError, performMatching } = useMatching();\n  \n  // Локальная ошибка (для валидации форм)\n  const [error, setError] = useState(null);\n\n  // Новое состояние для модального окна\n  const [resultOpen, setResultOpen] = useState(false);\n\n  // Загрузка резюме и вакансий при монтировании\n  useEffect(() => {\n    setLoadingDropdowns(true);\n    Promise.all([\n      resumeAPI.getAll(),\n      vacancyAPI.getAll()\n    ]).then(([resumesRes, vacanciesRes]) => {\n      setResumes(resumesRes.data || []);\n      setVacancies(vacanciesRes.data || []);\n    }).catch(() => {\n      setError('Ошибка загрузки резюме или вакансий');\n    }).finally(() => setLoadingDropdowns(false));\n  }, []);\n\n  // Обработчики изменения вкладок\n  const handleResumeTabChange = (event, newValue) => {\n    setResumeTabValue(newValue);\n  };\n\n  const handleVacancyTabChange = (event, newValue) => {\n    setVacancyTabValue(newValue);\n  };\n\n  // Обработчики изменения файла и полей ввода\n  const handleResumeFileChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      setResumeFile(event.target.files[0]);\n    }\n  };\n\n  const handleResumeUrlChange = (event) => {\n    setResumeUrl(event.target.value);\n  };\n\n  const handleResumeTextChange = (event) => {\n    setResumeText(event.target.value);\n  };\n\n  const handleResumeEmailChange = (event) => {\n    setResumeEmail(event.target.value);\n  };\n\n  const handleVacancyUrlChange = (event) => {\n    setVacancyUrl(event.target.value);\n  };\n\n  const handleVacancyTextChange = (event) => {\n    setVacancyText(event.target.value);\n  };\n\n  // Валидация форм\n  const validateForms = () => {\n    setError(null);\n\n    // Валидация формы резюме\n    if (resumeTabValue === 0) { // Файл\n      if (!resumeFile) {\n        setError('Пожалуйста, выберите PDF файл резюме');\n        return false;\n      }\n      if (!resumeEmail || !resumeEmail.includes('@')) {\n        setError('Пожалуйста, введите корректный email');\n        return false;\n      }\n    } else if (resumeTabValue === 1) { // URL\n      const cleanUrl = resumeUrl.startsWith('@') ? resumeUrl.substring(1) : resumeUrl.trim();\n      if (!cleanUrl || !cleanUrl.match(/^https?:\\/\\/(www\\.)?hh\\.ru\\/resume\\/\\w+/)) {\n        setError('Пожалуйста, введите корректную ссылку на резюме с hh.ru');\n        return false;\n      }\n    } else { // Текст\n      if (!resumeText || resumeText.length < 50) {\n        setError('Пожалуйста, введите текст резюме (минимум 50 символов)');\n        return false;\n      }\n    }\n\n    // Валидация формы вакансии\n    if (vacancyTabValue === 0) { // URL\n      const cleanUrl = vacancyUrl.startsWith('@') ? vacancyUrl.substring(1) : vacancyUrl.trim();\n      if (!cleanUrl || !cleanUrl.match(/^https?:\\/\\/(www\\.)?hh\\.ru\\/vacancy\\/\\d+/)) {\n        setError('Пожалуйста, введите корректную ссылку на вакансию с hh.ru');\n        return false;\n      }\n    } else { // Текст\n      if (!vacancyText || vacancyText.length < 50) {\n        setError('Пожалуйста, введите текст вакансии (минимум 50 символов)');\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  // Обработчик запроса на сопоставление\n  const handleMatch = async () => {\n    if (!validateForms()) {\n      return;\n    }\n\n    try {\n      let resumeType, resumeData, vacancyType, vacancyData;\n\n      // Определение типа резюме и данных\n      if (resumeTabValue === 0) { // Файл\n        resumeType = 'file';\n        resumeData = {\n          file: resumeFile,\n          email: resumeEmail\n        };\n      } else if (resumeTabValue === 1) { // URL\n        resumeType = 'url';\n        resumeData = resumeUrl;\n      } else { // Текст\n        resumeType = 'text';\n        resumeData = resumeText;\n      }\n\n      // Определение типа вакансии и данных\n      if (vacancyTabValue === 0) { // URL\n        vacancyType = 'url';\n        vacancyData = vacancyUrl;\n      } else { // Текст\n        vacancyType = 'text';\n        vacancyData = vacancyText;\n      }\n\n      // Вызов функции из контекста для выполнения сопоставления\n      await performMatching(resumeType, resumeData, vacancyType, vacancyData);\n    } catch (error) {\n      console.error('Error during matching:', error);\n      setError('Произошла ошибка при выполнении сопоставления. Пожалуйста, попробуйте еще раз.');\n    }\n  };\n\n  // Обработчик очистки форм\n  const handleClearForms = () => {\n    setResumeFile(null);\n    setResumeEmail('');\n    setResumeUrl('');\n    setResumeText('');\n    setVacancyUrl('');\n    setVacancyText('');\n    setError(null);\n  };\n\n  // Новый обработчик сопоставления по id\n  const handleIdMatch = async () => {\n    if (!selectedResume || !selectedVacancy) {\n      setError('Пожалуйста, выберите резюме и вакансию');\n      return;\n    }\n    setError(null);\n    setMatchingResult(null);\n    setLoadingDropdowns(true);\n    try {\n      const response = await fetch('http://localhost:8081/api/resume-vacancy-matches/full', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('hr_partner_auth') ? {\n            'Authorization': `Bearer ${JSON.parse(localStorage.getItem('hr_partner_auth')).token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          resumeId: selectedResume.id,\n          vacancyId: selectedVacancy.id\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка сопоставления');\n      const data = await response.json();\n      setMatchingResult(data);\n      setResultOpen(true);\n    } catch (e) {\n      setError('Ошибка сопоставления: ' + e.message);\n    } finally {\n      setLoadingDropdowns(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Сопоставление резюме и вакансий\n        </Typography>\n        \n        <Button\n          component={Link}\n          to=\"/matching/history\"\n          variant=\"outlined\"\n          startIcon={<HistoryIcon />}\n        >\n          История сопоставлений\n        </Button>\n      </Box>\n\n      {error && (\n        <Paper sx={{ p: 2, mb: 3, bgcolor: '#ffebee' }}>\n          <Typography color=\"error\">{error}</Typography>\n        </Paper>\n      )}\n\n      {matchingError && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {matchingError}\n        </Alert>\n      )}\n\n      {/* Центрируем формы */}\n      <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} md={8} lg={6}>\n          <Grid container spacing={3} justifyContent=\"center\" alignItems=\"flex-start\">\n            {/* Колонка с резюме */}\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardHeader\n                  title=\"Резюме\"\n                  sx={{ bgcolor: '#1976d2', color: 'white' }}\n                />\n                <CardContent>\n                  <Autocomplete\n                    options={resumes}\n                    getOptionLabel={(option) => option && option.name && option.role ? `${option.name} (${option.role})` : option && option.name ? option.name : ''}\n                    loading={loadingDropdowns}\n                    value={selectedResume}\n                    onChange={(_, value) => setSelectedResume(value)}\n                    noOptionsText={loadingDropdowns ? 'Загрузка...' : 'Нет доступных резюме'}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Выберите резюме\" placeholder=\"Начните вводить имя...\" fullWidth />\n                    )}\n                    isOptionEqualToValue={(option, value) => option && value && option.id === value.id}\n                    sx={{ minWidth: 240 }}\n                  />\n                </CardContent>\n              </Card>\n            </Grid>\n            {/* Колонка с вакансией */}\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardHeader\n                  title=\"Вакансия\"\n                  sx={{ bgcolor: '#1976d2', color: 'white' }}\n                />\n                <CardContent>\n                  <Autocomplete\n                    options={vacancies}\n                    getOptionLabel={(option) => option && option.title && option.company ? `${option.title} (${option.company})` : option && option.title ? option.title : ''}\n                    loading={loadingDropdowns}\n                    value={selectedVacancy}\n                    onChange={(_, value) => setSelectedVacancy(value)}\n                    noOptionsText={loadingDropdowns ? 'Загрузка...' : 'Нет доступных вакансий'}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Выберите вакансию\" placeholder=\"Начните вводить название...\" fullWidth />\n                    )}\n                    isOptionEqualToValue={(option, value) => option && value && option.id === value.id}\n                    sx={{ minWidth: 240 }}\n                  />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n          {/* Кнопки по центру */}\n          <Box sx={{ mt: 3, mb: 5, textAlign: 'center' }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleIdMatch}\n              disabled={loadingDropdowns || loading}\n              sx={{ mr: 2 }}\n            >\n              {loadingDropdowns ? 'Выполняется сопоставление...' : 'Выполнить сопоставление'}\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={handleClearForms}\n              disabled={loadingDropdowns || loading}\n            >\n              Очистить формы\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n\n      {/* Индикатор загрузки поверх экрана */}\n      {loadingDropdowns && (\n        <Box sx={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', bgcolor: 'rgba(255,255,255,0.5)', zIndex: 2000, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <CircularProgress size={60} />\n        </Box>\n      )}\n\n      {/* Модальное окно с результатом сопоставления */}\n      <Dialog open={resultOpen} onClose={() => setResultOpen(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Результаты сопоставления</DialogTitle>\n        <DialogContent>\n          {matchingResult && <MatchingResults results={matchingResult} />}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setResultOpen(false)}>Закрыть</Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default MatchingPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,GAAG,EACHC,IAAI,EACJC,GAAG,EACHC,SAAS,EACTC,KAAK,EACLC,gBAAgB,EAChBC,WAAW,EACXC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,YAAY,EACZC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,QACR,eAAe;AACtB,SACEC,IAAI,IAAIC,QAAQ,EAChBC,KAAK,IAAIC,SAAS,EAClBC,OAAO,IAAIC,WAAW,QACjB,qBAAqB;AAC5B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASP,IAAI,QAAQ,kBAAkB;AACvC,SAASQ,SAAS,EAAEC,UAAU,QAAQ,iBAAiB;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAE;IACTC,MAAM,EAAE,iBAAiB;IACzBC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,KAAK;IACnBC,YAAY,EAAE,MAAM;IACpBC,UAAU,EAAE,UAAU;IACtB,SAAS,EAAE;MACTC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE;IACnB;EACF;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkD,eAAe,EAAEC,kBAAkB,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0D,UAAU,EAAEC,aAAa,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACgE,OAAO,EAAEC,UAAU,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkE,SAAS,EAAEC,YAAY,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoE,cAAc,EAAEC,iBAAiB,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACsE,eAAe,EAAEC,kBAAkB,CAAC,GAAGvE,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACwE,cAAc,EAAEC,iBAAiB,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0E,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAM;IAAE4E,YAAY;IAAEC,OAAO;IAAEC,KAAK,EAAEC,aAAa;IAAEC;EAAgB,CAAC,GAAGjD,WAAW,CAAC,CAAC;;EAEtF;EACA,MAAM,CAAC+C,KAAK,EAAEG,QAAQ,CAAC,GAAGjF,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACkF,UAAU,EAAEC,aAAa,CAAC,GAAGnF,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd0E,mBAAmB,CAAC,IAAI,CAAC;IACzBS,OAAO,CAACC,GAAG,CAAC,CACVrD,SAAS,CAACsD,MAAM,CAAC,CAAC,EAClBrD,UAAU,CAACqD,MAAM,CAAC,CAAC,CACpB,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,UAAU,EAAEC,YAAY,CAAC,KAAK;MACtCxB,UAAU,CAACuB,UAAU,CAACE,IAAI,IAAI,EAAE,CAAC;MACjCvB,YAAY,CAACsB,YAAY,CAACC,IAAI,IAAI,EAAE,CAAC;IACvC,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;MACbV,QAAQ,CAAC,qCAAqC,CAAC;IACjD,CAAC,CAAC,CAACW,OAAO,CAAC,MAAMjB,mBAAmB,CAAC,KAAK,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkB,qBAAqB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjD9C,iBAAiB,CAAC8C,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAK;IAClD5C,kBAAkB,CAAC4C,QAAQ,CAAC;EAC9B,CAAC;;EAED;EACA,MAAME,sBAAsB,GAAIH,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACI,MAAM,CAACC,KAAK,IAAIL,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C9C,aAAa,CAACyC,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAIN,KAAK,IAAK;IACvCrC,YAAY,CAACqC,KAAK,CAACI,MAAM,CAACG,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,sBAAsB,GAAIR,KAAK,IAAK;IACxCnC,aAAa,CAACmC,KAAK,CAACI,MAAM,CAACG,KAAK,CAAC;EACnC,CAAC;EAED,MAAME,uBAAuB,GAAIT,KAAK,IAAK;IACzCvC,cAAc,CAACuC,KAAK,CAACI,MAAM,CAACG,KAAK,CAAC;EACpC,CAAC;EAED,MAAMG,sBAAsB,GAAIV,KAAK,IAAK;IACxCjC,aAAa,CAACiC,KAAK,CAACI,MAAM,CAACG,KAAK,CAAC;EACnC,CAAC;EAED,MAAMI,uBAAuB,GAAIX,KAAK,IAAK;IACzC/B,cAAc,CAAC+B,KAAK,CAACI,MAAM,CAACG,KAAK,CAAC;EACpC,CAAC;;EAED;EACA,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BzB,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACA,IAAIjC,cAAc,KAAK,CAAC,EAAE;MAAE;MAC1B,IAAI,CAACI,UAAU,EAAE;QACf6B,QAAQ,CAAC,sCAAsC,CAAC;QAChD,OAAO,KAAK;MACd;MACA,IAAI,CAAC3B,WAAW,IAAI,CAACA,WAAW,CAACqD,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC9C1B,QAAQ,CAAC,sCAAsC,CAAC;QAChD,OAAO,KAAK;MACd;IACF,CAAC,MAAM,IAAIjC,cAAc,KAAK,CAAC,EAAE;MAAE;MACjC,MAAM4D,QAAQ,GAAGpD,SAAS,CAACqD,UAAU,CAAC,GAAG,CAAC,GAAGrD,SAAS,CAACsD,SAAS,CAAC,CAAC,CAAC,GAAGtD,SAAS,CAACuD,IAAI,CAAC,CAAC;MACtF,IAAI,CAACH,QAAQ,IAAI,CAACA,QAAQ,CAACI,KAAK,CAAC,yCAAyC,CAAC,EAAE;QAC3E/B,QAAQ,CAAC,yDAAyD,CAAC;QACnE,OAAO,KAAK;MACd;IACF,CAAC,MAAM;MAAE;MACP,IAAI,CAACvB,UAAU,IAAIA,UAAU,CAACuD,MAAM,GAAG,EAAE,EAAE;QACzChC,QAAQ,CAAC,wDAAwD,CAAC;QAClE,OAAO,KAAK;MACd;IACF;;IAEA;IACA,IAAI/B,eAAe,KAAK,CAAC,EAAE;MAAE;MAC3B,MAAM0D,QAAQ,GAAGhD,UAAU,CAACiD,UAAU,CAAC,GAAG,CAAC,GAAGjD,UAAU,CAACkD,SAAS,CAAC,CAAC,CAAC,GAAGlD,UAAU,CAACmD,IAAI,CAAC,CAAC;MACzF,IAAI,CAACH,QAAQ,IAAI,CAACA,QAAQ,CAACI,KAAK,CAAC,0CAA0C,CAAC,EAAE;QAC5E/B,QAAQ,CAAC,2DAA2D,CAAC;QACrE,OAAO,KAAK;MACd;IACF,CAAC,MAAM;MAAE;MACP,IAAI,CAACnB,WAAW,IAAIA,WAAW,CAACmD,MAAM,GAAG,EAAE,EAAE;QAC3ChC,QAAQ,CAAC,0DAA0D,CAAC;QACpE,OAAO,KAAK;MACd;IACF;IAEA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMiC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACR,aAAa,CAAC,CAAC,EAAE;MACpB;IACF;IAEA,IAAI;MACF,IAAIS,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW;;MAEpD;MACA,IAAItE,cAAc,KAAK,CAAC,EAAE;QAAE;QAC1BmE,UAAU,GAAG,MAAM;QACnBC,UAAU,GAAG;UACXG,IAAI,EAAEnE,UAAU;UAChBoE,KAAK,EAAElE;QACT,CAAC;MACH,CAAC,MAAM,IAAIN,cAAc,KAAK,CAAC,EAAE;QAAE;QACjCmE,UAAU,GAAG,KAAK;QAClBC,UAAU,GAAG5D,SAAS;MACxB,CAAC,MAAM;QAAE;QACP2D,UAAU,GAAG,MAAM;QACnBC,UAAU,GAAG1D,UAAU;MACzB;;MAEA;MACA,IAAIR,eAAe,KAAK,CAAC,EAAE;QAAE;QAC3BmE,WAAW,GAAG,KAAK;QACnBC,WAAW,GAAG1D,UAAU;MAC1B,CAAC,MAAM;QAAE;QACPyD,WAAW,GAAG,MAAM;QACpBC,WAAW,GAAGxD,WAAW;MAC3B;;MAEA;MACA,MAAMkB,eAAe,CAACmC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW,CAAC;IACzE,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CG,QAAQ,CAAC,gFAAgF,CAAC;IAC5F;EACF,CAAC;;EAED;EACA,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrE,aAAa,CAAC,IAAI,CAAC;IACnBE,cAAc,CAAC,EAAE,CAAC;IAClBE,YAAY,CAAC,EAAE,CAAC;IAChBE,aAAa,CAAC,EAAE,CAAC;IACjBE,aAAa,CAAC,EAAE,CAAC;IACjBE,cAAc,CAAC,EAAE,CAAC;IAClBkB,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;EACA,MAAM0C,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACvD,cAAc,IAAI,CAACE,eAAe,EAAE;MACvCW,QAAQ,CAAC,wCAAwC,CAAC;MAClD;IACF;IACAA,QAAQ,CAAC,IAAI,CAAC;IACdR,iBAAiB,CAAC,IAAI,CAAC;IACvBE,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAI;MACF,MAAMiD,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;QACpFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,IAAIC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAAG;YAC5C,eAAe,EAAE,UAAUC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAACG,KAAK;UACtF,CAAC,GAAG,CAAC,CAAC;QACR,CAAC;QACDC,IAAI,EAAEH,IAAI,CAACI,SAAS,CAAC;UACnBC,QAAQ,EAAEnE,cAAc,CAACoE,EAAE;UAC3BC,SAAS,EAAEnE,eAAe,CAACkE;QAC7B,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACZ,QAAQ,CAACc,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzD,MAAMjD,IAAI,GAAG,MAAMkC,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAClCnE,iBAAiB,CAACiB,IAAI,CAAC;MACvBP,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAO0D,CAAC,EAAE;MACV5D,QAAQ,CAAC,wBAAwB,GAAG4D,CAAC,CAACC,OAAO,CAAC;IAChD,CAAC,SAAS;MACRnE,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,oBACExC,OAAA,CAACjC,SAAS;IAAC6I,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5ChH,OAAA,CAAC1B,GAAG;MAACuI,EAAE,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEJ,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACzFhH,OAAA,CAAChC,UAAU;QAACoJ,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAAAL,QAAA,EAAC;MAExC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEbzH,OAAA,CAAC3B,MAAM;QACLgJ,SAAS,EAAEhI,IAAK;QAChBqI,EAAE,EAAC,mBAAmB;QACtBN,OAAO,EAAC,UAAU;QAClBO,SAAS,eAAE3H,OAAA,CAACN,WAAW;UAAA4H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAT,QAAA,EAC5B;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL9E,KAAK,iBACJ3C,OAAA,CAACtB,KAAK;MAACmI,EAAE,EAAE;QAAEe,CAAC,EAAE,CAAC;QAAEb,EAAE,EAAE,CAAC;QAAEc,OAAO,EAAE;MAAU,CAAE;MAAAb,QAAA,eAC7ChH,OAAA,CAAChC,UAAU;QAAC8J,KAAK,EAAC,OAAO;QAAAd,QAAA,EAAErE;MAAK;QAAA2E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACR,EAEA7E,aAAa,iBACZ5C,OAAA,CAACjB,KAAK;MAACgJ,QAAQ,EAAC,OAAO;MAAClB,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EACnCpE;IAAa;MAAA0E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACR,eAGDzH,OAAA,CAAC/B,IAAI;MAAC+J,SAAS;MAACC,OAAO,EAAE,CAAE;MAACf,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC,QAAQ;MAAAH,QAAA,eACrEhH,OAAA,CAAC/B,IAAI;QAACiK,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAArB,QAAA,gBAC9BhH,OAAA,CAAC/B,IAAI;UAAC+J,SAAS;UAACC,OAAO,EAAE,CAAE;UAACf,cAAc,EAAC,QAAQ;UAACC,UAAU,EAAC,YAAY;UAAAH,QAAA,gBAEzEhH,OAAA,CAAC/B,IAAI;YAACiK,IAAI;YAACC,EAAE,EAAE,EAAG;YAACG,EAAE,EAAE,CAAE;YAAAtB,QAAA,eACvBhH,OAAA,CAAC9B,IAAI;cAAA8I,QAAA,gBACHhH,OAAA,CAAC7B,UAAU;gBACToK,KAAK,EAAC,sCAAQ;gBACd1B,EAAE,EAAE;kBAAEgB,OAAO,EAAE,SAAS;kBAAEC,KAAK,EAAE;gBAAQ;cAAE;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,eACFzH,OAAA,CAAC5B,WAAW;gBAAA4I,QAAA,eACVhH,OAAA,CAAChB,YAAY;kBACXwJ,OAAO,EAAE3G,OAAQ;kBACjB4G,cAAc,EAAGC,MAAM,IAAKA,MAAM,IAAIA,MAAM,CAACC,IAAI,IAAID,MAAM,CAACE,IAAI,GAAG,GAAGF,MAAM,CAACC,IAAI,KAAKD,MAAM,CAACE,IAAI,GAAG,GAAGF,MAAM,IAAIA,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACC,IAAI,GAAG,EAAG;kBAChJjG,OAAO,EAAEH,gBAAiB;kBAC1B2B,KAAK,EAAEjC,cAAe;kBACtB4G,QAAQ,EAAEA,CAACC,CAAC,EAAE5E,KAAK,KAAKhC,iBAAiB,CAACgC,KAAK,CAAE;kBACjD6E,aAAa,EAAExG,gBAAgB,GAAG,aAAa,GAAG,sBAAuB;kBACzEyG,WAAW,EAAGC,MAAM,iBAClBjJ,OAAA,CAACvB,SAAS;oBAAA,GAAKwK,MAAM;oBAAEC,KAAK,EAAC,uFAAiB;oBAACC,WAAW,EAAC,6GAAwB;oBAACC,SAAS;kBAAA;oBAAA9B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAC/F;kBACF4B,oBAAoB,EAAEA,CAACX,MAAM,EAAExE,KAAK,KAAKwE,MAAM,IAAIxE,KAAK,IAAIwE,MAAM,CAACrC,EAAE,KAAKnC,KAAK,CAACmC,EAAG;kBACnFQ,EAAE,EAAE;oBAAEyC,QAAQ,EAAE;kBAAI;gBAAE;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEPzH,OAAA,CAAC/B,IAAI;YAACiK,IAAI;YAACC,EAAE,EAAE,EAAG;YAACG,EAAE,EAAE,CAAE;YAAAtB,QAAA,eACvBhH,OAAA,CAAC9B,IAAI;cAAA8I,QAAA,gBACHhH,OAAA,CAAC7B,UAAU;gBACToK,KAAK,EAAC,kDAAU;gBAChB1B,EAAE,EAAE;kBAAEgB,OAAO,EAAE,SAAS;kBAAEC,KAAK,EAAE;gBAAQ;cAAE;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,eACFzH,OAAA,CAAC5B,WAAW;gBAAA4I,QAAA,eACVhH,OAAA,CAAChB,YAAY;kBACXwJ,OAAO,EAAEzG,SAAU;kBACnB0G,cAAc,EAAGC,MAAM,IAAKA,MAAM,IAAIA,MAAM,CAACH,KAAK,IAAIG,MAAM,CAACa,OAAO,GAAG,GAAGb,MAAM,CAACH,KAAK,KAAKG,MAAM,CAACa,OAAO,GAAG,GAAGb,MAAM,IAAIA,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACH,KAAK,GAAG,EAAG;kBAC1J7F,OAAO,EAAEH,gBAAiB;kBAC1B2B,KAAK,EAAE/B,eAAgB;kBACvB0G,QAAQ,EAAEA,CAACC,CAAC,EAAE5E,KAAK,KAAK9B,kBAAkB,CAAC8B,KAAK,CAAE;kBAClD6E,aAAa,EAAExG,gBAAgB,GAAG,aAAa,GAAG,wBAAyB;kBAC3EyG,WAAW,EAAGC,MAAM,iBAClBjJ,OAAA,CAACvB,SAAS;oBAAA,GAAKwK,MAAM;oBAAEC,KAAK,EAAC,mGAAmB;oBAACC,WAAW,EAAC,2IAA6B;oBAACC,SAAS;kBAAA;oBAAA9B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CACtG;kBACF4B,oBAAoB,EAAEA,CAACX,MAAM,EAAExE,KAAK,KAAKwE,MAAM,IAAIxE,KAAK,IAAIwE,MAAM,CAACrC,EAAE,KAAKnC,KAAK,CAACmC,EAAG;kBACnFQ,EAAE,EAAE;oBAAEyC,QAAQ,EAAE;kBAAI;gBAAE;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEPzH,OAAA,CAAC1B,GAAG;UAACuI,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAE,CAAC;YAAE1G,SAAS,EAAE;UAAS,CAAE;UAAA2G,QAAA,gBAC7ChH,OAAA,CAAC3B,MAAM;YACL+I,OAAO,EAAC,WAAW;YACnBU,KAAK,EAAC,SAAS;YACf0B,IAAI,EAAC,OAAO;YACZC,OAAO,EAAEjE,aAAc;YACvBkE,QAAQ,EAAEnH,gBAAgB,IAAIG,OAAQ;YACtCmE,EAAE,EAAE;cAAE8C,EAAE,EAAE;YAAE,CAAE;YAAA3C,QAAA,EAEbzE,gBAAgB,GAAG,8BAA8B,GAAG;UAAyB;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC,eACTzH,OAAA,CAAC3B,MAAM;YACL+I,OAAO,EAAC,UAAU;YAClBqC,OAAO,EAAElE,gBAAiB;YAC1BmE,QAAQ,EAAEnH,gBAAgB,IAAIG,OAAQ;YAAAsE,QAAA,EACvC;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGNlF,gBAAgB,iBACfvC,OAAA,CAAC1B,GAAG;MAACuI,EAAE,EAAE;QAAE+C,QAAQ,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEnC,OAAO,EAAE,uBAAuB;QAAEoC,MAAM,EAAE,IAAI;QAAEhD,OAAO,EAAE,MAAM;QAAEE,UAAU,EAAE,QAAQ;QAAED,cAAc,EAAE;MAAS,CAAE;MAAAF,QAAA,eAChMhH,OAAA,CAACrB,gBAAgB;QAAC6K,IAAI,EAAE;MAAG;QAAAlC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACN,eAGDzH,OAAA,CAACf,MAAM;MAACiL,IAAI,EAAEnH,UAAW;MAACoH,OAAO,EAAEA,CAAA,KAAMnH,aAAa,CAAC,KAAK,CAAE;MAAC4D,QAAQ,EAAC,IAAI;MAACwC,SAAS;MAAApC,QAAA,gBACpFhH,OAAA,CAACd,WAAW;QAAA8H,QAAA,EAAC;MAAwB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACnDzH,OAAA,CAACb,aAAa;QAAA6H,QAAA,EACX3E,cAAc,iBAAIrC,OAAA,CAACL,eAAe;UAACyK,OAAO,EAAE/H;QAAe;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eAChBzH,OAAA,CAACZ,aAAa;QAAA4H,QAAA,eACZhH,OAAA,CAAC3B,MAAM;UAACoL,OAAO,EAAEA,CAAA,KAAMzG,aAAa,CAAC,KAAK,CAAE;UAAAgE,QAAA,EAAC;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAAC7G,EAAA,CA9UID,YAAY;EAAA,QAsByDf,WAAW;AAAA;AAAAyK,EAAA,GAtBhF1J,YAAY;AAgVlB,eAAeA,YAAY;AAAC,IAAA0J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}